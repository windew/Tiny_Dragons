
Design_Assignment_3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000ce8  00000d7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ce8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800114  00800114  00000d90  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c9b  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a58  00000000  00000000  00001b1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a0  00000000  00000000  00002577  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  00002a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000553  00000000  00000000  00002b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000027c  00000000  00000000  00003073  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000032ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 29 01 	jmp	0x252	; 0x252 <__vector_13>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 ee       	ldi	r30, 0xE8	; 232
  c8:	fc e0       	ldi	r31, 0x0C	; 12
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 31       	cpi	r26, 0x14	; 20
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e1       	ldi	r26, 0x14	; 20
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	ab 32       	cpi	r26, 0x2B	; 43
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 08 01 	call	0x210	; 0x210 <main>
  ea:	0c 94 72 06 	jmp	0xce4	; 0xce4 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <adc_init>:

unsigned char USART_receive(void)
{
	while(!(UCSR0A & (1 << RXC0)));
	return UDR0;
}
  f2:	84 e4       	ldi	r24, 0x44	; 68
  f4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
  f8:	85 e8       	ldi	r24, 0x85	; 133
  fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  fe:	ef e6       	ldi	r30, 0x6F	; 111
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	81 60       	ori	r24, 0x01	; 1
 106:	80 83       	st	Z, r24
 108:	e1 e8       	ldi	r30, 0x81	; 129
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	83 60       	ori	r24, 0x03	; 3
 110:	80 83       	st	Z, r24
 112:	87 ef       	ldi	r24, 0xF7	; 247
 114:	92 ec       	ldi	r25, 0xC2	; 194
 116:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 11a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
 11e:	08 95       	ret

00000120 <USART_init>:
 120:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 12a:	88 e1       	ldi	r24, 0x18	; 24
 12c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 136:	08 95       	ret

00000138 <USART_transmit>:

void USART_transmit(unsigned char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
 138:	e0 ec       	ldi	r30, 0xC0	; 192
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	95 ff       	sbrs	r25, 5
 140:	fd cf       	rjmp	.-6      	; 0x13c <USART_transmit+0x4>
	UDR0 = data;
 142:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 146:	08 95       	ret

00000148 <USART_tx_string>:
}


void USART_tx_string(char* data)
{
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
	while(*data != 0x00)
 14e:	88 81       	ld	r24, Y
 150:	88 23       	and	r24, r24
 152:	31 f0       	breq	.+12     	; 0x160 <USART_tx_string+0x18>
 154:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_transmit(*data);
 156:	0e 94 9c 00 	call	0x138	; 0x138 <USART_transmit>
}


void USART_tx_string(char* data)
{
	while(*data != 0x00)
 15a:	89 91       	ld	r24, Y+
 15c:	81 11       	cpse	r24, r1
 15e:	fb cf       	rjmp	.-10     	; 0x156 <USART_tx_string+0xe>
	{
		USART_transmit(*data);
		data++;
	}
}
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <read_adc>:
} 
/* READ ADC PINS */ 
void read_adc(void) 
{  
	unsigned char i =4;  
	adc_temp = 0;  
 166:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <adc_temp+0x1>
 16a:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <adc_temp>
 16e:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {   
					ADCSRA |= (1<<ADSC);   
 170:	ea e7       	ldi	r30, 0x7A	; 122
 172:	f0 e0       	ldi	r31, 0x00	; 0
					while(ADCSRA & (1<<ADSC));   
					adc_temp+= ADC;  
 174:	a8 e7       	ldi	r26, 0x78	; 120
 176:	b0 e0       	ldi	r27, 0x00	; 0
void read_adc(void) 
{  
	unsigned char i =4;  
	adc_temp = 0;  
	while (i--) {   
					ADCSRA |= (1<<ADSC);   
 178:	80 81       	ld	r24, Z
 17a:	80 64       	ori	r24, 0x40	; 64
 17c:	80 83       	st	Z, r24
					while(ADCSRA & (1<<ADSC));   
 17e:	80 81       	ld	r24, Z
 180:	86 fd       	sbrc	r24, 6
 182:	fd cf       	rjmp	.-6      	; 0x17e <read_adc+0x18>
					adc_temp+= ADC;  
 184:	4d 91       	ld	r20, X+
 186:	5c 91       	ld	r21, X
 188:	11 97       	sbiw	r26, 0x01	; 1
 18a:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <adc_temp>
 18e:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <adc_temp+0x1>
 192:	84 0f       	add	r24, r20
 194:	95 1f       	adc	r25, r21
 196:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <adc_temp+0x1>
 19a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19e:	3f ef       	ldi	r19, 0xFF	; 255
 1a0:	80 e7       	ldi	r24, 0x70	; 112
 1a2:	92 e0       	ldi	r25, 0x02	; 2
 1a4:	31 50       	subi	r19, 0x01	; 1
 1a6:	80 40       	sbci	r24, 0x00	; 0
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <read_adc+0x3e>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <read_adc+0x48>
 1ae:	00 00       	nop
 1b0:	21 50       	subi	r18, 0x01	; 1
/* READ ADC PINS */ 
void read_adc(void) 
{  
	unsigned char i =4;  
	adc_temp = 0;  
	while (i--) {   
 1b2:	11 f7       	brne	.-60     	; 0x178 <read_adc+0x12>
					ADCSRA |= (1<<ADSC);   
					while(ADCSRA & (1<<ADSC));   
					adc_temp+= ADC;  
					_delay_ms(50);  
			    }  
	adc_temp = adc_temp /3; // Average a few samples  
 1b4:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <adc_temp>
 1b8:	30 91 2a 01 	lds	r19, 0x012A	; 0x80012a <adc_temp+0x1>
 1bc:	ab ea       	ldi	r26, 0xAB	; 171
 1be:	ba ea       	ldi	r27, 0xAA	; 170
 1c0:	0e 94 57 03 	call	0x6ae	; 0x6ae <__umulhisi3>
 1c4:	96 95       	lsr	r25
 1c6:	87 95       	ror	r24
 1c8:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <adc_temp+0x1>
 1cc:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <adc_temp>
	//int tempf= (adc_temp*5*100);  
	snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);// print it  
 1d0:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <adc_temp>
 1d4:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <adc_temp+0x1>
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	1f 92       	push	r1
 1e6:	84 e1       	ldi	r24, 0x14	; 20
 1e8:	8f 93       	push	r24
 1ea:	85 e1       	ldi	r24, 0x15	; 21
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <snprintf>
	USART_tx_string(outs); 
 1f6:	85 e1       	ldi	r24, 0x15	; 21
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	0e 94 a4 00 	call	0x148	; 0x148 <USART_tx_string>
}
 1fe:	8d b7       	in	r24, 0x3d	; 61
 200:	9e b7       	in	r25, 0x3e	; 62
 202:	08 96       	adiw	r24, 0x08	; 8
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	9e bf       	out	0x3e, r25	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	8d bf       	out	0x3d, r24	; 61
 20e:	08 95       	ret

00000210 <main>:
uint8_t OVF_COUNT = 0; //initialize the overflow count for interrupt
uint8_t OVF_LIMIT = 250; //set the limit the count can reach to set 1 sec delay


int main(void) { 
	 adc_init(); // Initialize the ADC (Analog / Digital Converter)  
 210:	0e 94 79 00 	call	0xf2	; 0xf2 <adc_init>
	USART_init(); // Initialize the USART (RS232 interface) 
 214:	0e 94 90 00 	call	0x120	; 0x120 <USART_init>
	USART_tx_string("Connected!\r\n"); // we're alive!  
 218:	87 e0       	ldi	r24, 0x07	; 7
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	0e 94 a4 00 	call	0x148	; 0x148 <USART_tx_string>
 220:	2f e7       	ldi	r18, 0x7F	; 127
 222:	8a e1       	ldi	r24, 0x1A	; 26
 224:	96 e0       	ldi	r25, 0x06	; 6
 226:	21 50       	subi	r18, 0x01	; 1
 228:	80 40       	sbci	r24, 0x00	; 0
 22a:	90 40       	sbci	r25, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x16>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x20>
 230:	00 00       	nop
	_delay_ms(125); // wait a bit  
	while(1)  
	{  
		read_adc();   // snprintf(outs,sizeof(outs),
 232:	0e 94 b3 00 	call	0x166	; 0x166 <read_adc>
		//"%3d\r\n", adc_temp);
		// print it   
		USART_tx_string(outs);   
 236:	85 e1       	ldi	r24, 0x15	; 21
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	0e 94 a4 00 	call	0x148	; 0x148 <USART_tx_string>
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	83 ed       	ldi	r24, 0xD3	; 211
 242:	90 e3       	ldi	r25, 0x30	; 48
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x34>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x3e>
 24e:	00 00       	nop
 250:	f0 cf       	rjmp	.-32     	; 0x232 <main+0x22>

00000252 <__vector_13>:
		data++;
	}
}

ISR(TIMER1_OVF_vect)
{
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	2f 93       	push	r18
 25e:	3f 93       	push	r19
 260:	4f 93       	push	r20
 262:	5f 93       	push	r21
 264:	6f 93       	push	r22
 266:	7f 93       	push	r23
 268:	8f 93       	push	r24
 26a:	9f 93       	push	r25
 26c:	af 93       	push	r26
 26e:	bf 93       	push	r27
 270:	cf 93       	push	r28
 272:	ef 93       	push	r30
 274:	ff 93       	push	r31
	OVF_COUNT++; //increment the overflow counter
 276:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 27a:	8f 5f       	subi	r24, 0xFF	; 255
 27c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	if (OVF_COUNT == OVF_LIMIT) //check to see if the limit was reached
 280:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <OVF_LIMIT>
 284:	89 13       	cpse	r24, r25
 286:	48 c0       	rjmp	.+144    	; 0x318 <__vector_13+0xc6>
	{
		ADCSRA|=(1<<ADSC);	//start conversion
 288:	ea e7       	ldi	r30, 0x7A	; 122
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
 292:	80 81       	ld	r24, Z
 294:	84 ff       	sbrs	r24, 4
 296:	fd cf       	rjmp	.-6      	; 0x292 <__vector_13+0x40>
		
		ADCSRA |= (1<<ADIF);
 298:	ea e7       	ldi	r30, 0x7A	; 122
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	80 61       	ori	r24, 0x10	; 16
 2a0:	80 83       	st	Z, r24

		int a = ADCL;
 2a2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
		a = a | (ADCH<<8);
 2a6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
		a = (a/1024.0) * 5000/10;
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	78 2b       	or	r23, r24
 2ae:	07 2e       	mov	r0, r23
 2b0:	00 0c       	add	r0, r0
 2b2:	88 0b       	sbc	r24, r24
 2b4:	99 0b       	sbc	r25, r25
 2b6:	0e 94 4a 02 	call	0x494	; 0x494 <__floatsisf>
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	40 e8       	ldi	r20, 0x80	; 128
 2c0:	5a e3       	ldi	r21, 0x3A	; 58
 2c2:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3>
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	30 e4       	ldi	r19, 0x40	; 64
 2ca:	4c e9       	ldi	r20, 0x9C	; 156
 2cc:	55 e4       	ldi	r21, 0x45	; 69
 2ce:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3>
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	40 e2       	ldi	r20, 0x20	; 32
 2d8:	51 e4       	ldi	r21, 0x41	; 65
 2da:	0e 94 a0 01 	call	0x340	; 0x340 <__divsf3>
		a = (a*2)+32; //equation to convert celsius to farenheit. can't use used 2 instead of 9/5
 2de:	0e 94 12 02 	call	0x424	; 0x424 <__fixsfsi>
 2e2:	60 5f       	subi	r22, 0xF0	; 240
 2e4:	7f 4f       	sbci	r23, 0xFF	; 255
 2e6:	cb 01       	movw	r24, r22
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
		a = a % 100;
 2ec:	64 e6       	ldi	r22, 0x64	; 100
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	0e 94 43 03 	call	0x686	; 0x686 <__divmodhi4>
		USART_transmit((a/10)+'0');
 2f4:	6a e0       	ldi	r22, 0x0A	; 10
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	0e 94 43 03 	call	0x686	; 0x686 <__divmodhi4>
 2fc:	c8 2f       	mov	r28, r24
 2fe:	80 e3       	ldi	r24, 0x30	; 48
 300:	86 0f       	add	r24, r22
 302:	0e 94 9c 00 	call	0x138	; 0x138 <USART_transmit>
		a = a % 10;
		USART_transmit((a)+'0');
 306:	80 e3       	ldi	r24, 0x30	; 48
 308:	8c 0f       	add	r24, r28
 30a:	0e 94 9c 00 	call	0x138	; 0x138 <USART_transmit>
		USART_transmit('\n');
 30e:	8a e0       	ldi	r24, 0x0A	; 10
 310:	0e 94 9c 00 	call	0x138	; 0x138 <USART_transmit>
		OVF_COUNT = 0; //reset overflow counter
 314:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
	}
	TCNT0 = 16; //reset TOP
 318:	80 e1       	ldi	r24, 0x10	; 16
 31a:	86 bd       	out	0x26, r24	; 38
}
 31c:	ff 91       	pop	r31
 31e:	ef 91       	pop	r30
 320:	cf 91       	pop	r28
 322:	bf 91       	pop	r27
 324:	af 91       	pop	r26
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	7f 91       	pop	r23
 32c:	6f 91       	pop	r22
 32e:	5f 91       	pop	r21
 330:	4f 91       	pop	r20
 332:	3f 91       	pop	r19
 334:	2f 91       	pop	r18
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <__divsf3>:
 340:	0e 94 b4 01 	call	0x368	; 0x368 <__divsf3x>
 344:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>
 348:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscB>
 34c:	58 f0       	brcs	.+22     	; 0x364 <__divsf3+0x24>
 34e:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_pscA>
 352:	40 f0       	brcs	.+16     	; 0x364 <__divsf3+0x24>
 354:	29 f4       	brne	.+10     	; 0x360 <__divsf3+0x20>
 356:	5f 3f       	cpi	r21, 0xFF	; 255
 358:	29 f0       	breq	.+10     	; 0x364 <__divsf3+0x24>
 35a:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 35e:	51 11       	cpse	r21, r1
 360:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 364:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>

00000368 <__divsf3x>:
 368:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_split3>
 36c:	68 f3       	brcs	.-38     	; 0x348 <__divsf3+0x8>

0000036e <__divsf3_pse>:
 36e:	99 23       	and	r25, r25
 370:	b1 f3       	breq	.-20     	; 0x35e <__divsf3+0x1e>
 372:	55 23       	and	r21, r21
 374:	91 f3       	breq	.-28     	; 0x35a <__divsf3+0x1a>
 376:	95 1b       	sub	r25, r21
 378:	55 0b       	sbc	r21, r21
 37a:	bb 27       	eor	r27, r27
 37c:	aa 27       	eor	r26, r26
 37e:	62 17       	cp	r22, r18
 380:	73 07       	cpc	r23, r19
 382:	84 07       	cpc	r24, r20
 384:	38 f0       	brcs	.+14     	; 0x394 <__divsf3_pse+0x26>
 386:	9f 5f       	subi	r25, 0xFF	; 255
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	22 0f       	add	r18, r18
 38c:	33 1f       	adc	r19, r19
 38e:	44 1f       	adc	r20, r20
 390:	aa 1f       	adc	r26, r26
 392:	a9 f3       	breq	.-22     	; 0x37e <__divsf3_pse+0x10>
 394:	35 d0       	rcall	.+106    	; 0x400 <__LOCK_REGION_LENGTH__>
 396:	0e 2e       	mov	r0, r30
 398:	3a f0       	brmi	.+14     	; 0x3a8 <__divsf3_pse+0x3a>
 39a:	e0 e8       	ldi	r30, 0x80	; 128
 39c:	32 d0       	rcall	.+100    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 39e:	91 50       	subi	r25, 0x01	; 1
 3a0:	50 40       	sbci	r21, 0x00	; 0
 3a2:	e6 95       	lsr	r30
 3a4:	00 1c       	adc	r0, r0
 3a6:	ca f7       	brpl	.-14     	; 0x39a <__divsf3_pse+0x2c>
 3a8:	2b d0       	rcall	.+86     	; 0x400 <__LOCK_REGION_LENGTH__>
 3aa:	fe 2f       	mov	r31, r30
 3ac:	29 d0       	rcall	.+82     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ae:	66 0f       	add	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	bb 1f       	adc	r27, r27
 3b6:	26 17       	cp	r18, r22
 3b8:	37 07       	cpc	r19, r23
 3ba:	48 07       	cpc	r20, r24
 3bc:	ab 07       	cpc	r26, r27
 3be:	b0 e8       	ldi	r27, 0x80	; 128
 3c0:	09 f0       	breq	.+2      	; 0x3c4 <__divsf3_pse+0x56>
 3c2:	bb 0b       	sbc	r27, r27
 3c4:	80 2d       	mov	r24, r0
 3c6:	bf 01       	movw	r22, r30
 3c8:	ff 27       	eor	r31, r31
 3ca:	93 58       	subi	r25, 0x83	; 131
 3cc:	5f 4f       	sbci	r21, 0xFF	; 255
 3ce:	3a f0       	brmi	.+14     	; 0x3de <__divsf3_pse+0x70>
 3d0:	9e 3f       	cpi	r25, 0xFE	; 254
 3d2:	51 05       	cpc	r21, r1
 3d4:	78 f0       	brcs	.+30     	; 0x3f4 <__divsf3_pse+0x86>
 3d6:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 3da:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 3de:	5f 3f       	cpi	r21, 0xFF	; 255
 3e0:	e4 f3       	brlt	.-8      	; 0x3da <__divsf3_pse+0x6c>
 3e2:	98 3e       	cpi	r25, 0xE8	; 232
 3e4:	d4 f3       	brlt	.-12     	; 0x3da <__divsf3_pse+0x6c>
 3e6:	86 95       	lsr	r24
 3e8:	77 95       	ror	r23
 3ea:	67 95       	ror	r22
 3ec:	b7 95       	ror	r27
 3ee:	f7 95       	ror	r31
 3f0:	9f 5f       	subi	r25, 0xFF	; 255
 3f2:	c9 f7       	brne	.-14     	; 0x3e6 <__divsf3_pse+0x78>
 3f4:	88 0f       	add	r24, r24
 3f6:	91 1d       	adc	r25, r1
 3f8:	96 95       	lsr	r25
 3fa:	87 95       	ror	r24
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret
 400:	e1 e0       	ldi	r30, 0x01	; 1
 402:	66 0f       	add	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	88 1f       	adc	r24, r24
 408:	bb 1f       	adc	r27, r27
 40a:	62 17       	cp	r22, r18
 40c:	73 07       	cpc	r23, r19
 40e:	84 07       	cpc	r24, r20
 410:	ba 07       	cpc	r27, r26
 412:	20 f0       	brcs	.+8      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 414:	62 1b       	sub	r22, r18
 416:	73 0b       	sbc	r23, r19
 418:	84 0b       	sbc	r24, r20
 41a:	ba 0b       	sbc	r27, r26
 41c:	ee 1f       	adc	r30, r30
 41e:	88 f7       	brcc	.-30     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 420:	e0 95       	com	r30
 422:	08 95       	ret

00000424 <__fixsfsi>:
 424:	0e 94 19 02 	call	0x432	; 0x432 <__fixunssfsi>
 428:	68 94       	set
 42a:	b1 11       	cpse	r27, r1
 42c:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 430:	08 95       	ret

00000432 <__fixunssfsi>:
 432:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_splitA>
 436:	88 f0       	brcs	.+34     	; 0x45a <__fixunssfsi+0x28>
 438:	9f 57       	subi	r25, 0x7F	; 127
 43a:	98 f0       	brcs	.+38     	; 0x462 <__fixunssfsi+0x30>
 43c:	b9 2f       	mov	r27, r25
 43e:	99 27       	eor	r25, r25
 440:	b7 51       	subi	r27, 0x17	; 23
 442:	b0 f0       	brcs	.+44     	; 0x470 <__fixunssfsi+0x3e>
 444:	e1 f0       	breq	.+56     	; 0x47e <__fixunssfsi+0x4c>
 446:	66 0f       	add	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	88 1f       	adc	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	1a f0       	brmi	.+6      	; 0x456 <__fixunssfsi+0x24>
 450:	ba 95       	dec	r27
 452:	c9 f7       	brne	.-14     	; 0x446 <__fixunssfsi+0x14>
 454:	14 c0       	rjmp	.+40     	; 0x47e <__fixunssfsi+0x4c>
 456:	b1 30       	cpi	r27, 0x01	; 1
 458:	91 f0       	breq	.+36     	; 0x47e <__fixunssfsi+0x4c>
 45a:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_zero>
 45e:	b1 e0       	ldi	r27, 0x01	; 1
 460:	08 95       	ret
 462:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_zero>
 466:	67 2f       	mov	r22, r23
 468:	78 2f       	mov	r23, r24
 46a:	88 27       	eor	r24, r24
 46c:	b8 5f       	subi	r27, 0xF8	; 248
 46e:	39 f0       	breq	.+14     	; 0x47e <__fixunssfsi+0x4c>
 470:	b9 3f       	cpi	r27, 0xF9	; 249
 472:	cc f3       	brlt	.-14     	; 0x466 <__fixunssfsi+0x34>
 474:	86 95       	lsr	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b3 95       	inc	r27
 47c:	d9 f7       	brne	.-10     	; 0x474 <__fixunssfsi+0x42>
 47e:	3e f4       	brtc	.+14     	; 0x48e <__fixunssfsi+0x5c>
 480:	90 95       	com	r25
 482:	80 95       	com	r24
 484:	70 95       	com	r23
 486:	61 95       	neg	r22
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	08 95       	ret

00000490 <__floatunsisf>:
 490:	e8 94       	clt
 492:	09 c0       	rjmp	.+18     	; 0x4a6 <__floatsisf+0x12>

00000494 <__floatsisf>:
 494:	97 fb       	bst	r25, 7
 496:	3e f4       	brtc	.+14     	; 0x4a6 <__floatsisf+0x12>
 498:	90 95       	com	r25
 49a:	80 95       	com	r24
 49c:	70 95       	com	r23
 49e:	61 95       	neg	r22
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255
 4a2:	8f 4f       	sbci	r24, 0xFF	; 255
 4a4:	9f 4f       	sbci	r25, 0xFF	; 255
 4a6:	99 23       	and	r25, r25
 4a8:	a9 f0       	breq	.+42     	; 0x4d4 <__floatsisf+0x40>
 4aa:	f9 2f       	mov	r31, r25
 4ac:	96 e9       	ldi	r25, 0x96	; 150
 4ae:	bb 27       	eor	r27, r27
 4b0:	93 95       	inc	r25
 4b2:	f6 95       	lsr	r31
 4b4:	87 95       	ror	r24
 4b6:	77 95       	ror	r23
 4b8:	67 95       	ror	r22
 4ba:	b7 95       	ror	r27
 4bc:	f1 11       	cpse	r31, r1
 4be:	f8 cf       	rjmp	.-16     	; 0x4b0 <__floatsisf+0x1c>
 4c0:	fa f4       	brpl	.+62     	; 0x500 <__floatsisf+0x6c>
 4c2:	bb 0f       	add	r27, r27
 4c4:	11 f4       	brne	.+4      	; 0x4ca <__floatsisf+0x36>
 4c6:	60 ff       	sbrs	r22, 0
 4c8:	1b c0       	rjmp	.+54     	; 0x500 <__floatsisf+0x6c>
 4ca:	6f 5f       	subi	r22, 0xFF	; 255
 4cc:	7f 4f       	sbci	r23, 0xFF	; 255
 4ce:	8f 4f       	sbci	r24, 0xFF	; 255
 4d0:	9f 4f       	sbci	r25, 0xFF	; 255
 4d2:	16 c0       	rjmp	.+44     	; 0x500 <__floatsisf+0x6c>
 4d4:	88 23       	and	r24, r24
 4d6:	11 f0       	breq	.+4      	; 0x4dc <__floatsisf+0x48>
 4d8:	96 e9       	ldi	r25, 0x96	; 150
 4da:	11 c0       	rjmp	.+34     	; 0x4fe <__floatsisf+0x6a>
 4dc:	77 23       	and	r23, r23
 4de:	21 f0       	breq	.+8      	; 0x4e8 <__floatsisf+0x54>
 4e0:	9e e8       	ldi	r25, 0x8E	; 142
 4e2:	87 2f       	mov	r24, r23
 4e4:	76 2f       	mov	r23, r22
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <__floatsisf+0x5e>
 4e8:	66 23       	and	r22, r22
 4ea:	71 f0       	breq	.+28     	; 0x508 <__floatsisf+0x74>
 4ec:	96 e8       	ldi	r25, 0x86	; 134
 4ee:	86 2f       	mov	r24, r22
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	60 e0       	ldi	r22, 0x00	; 0
 4f4:	2a f0       	brmi	.+10     	; 0x500 <__floatsisf+0x6c>
 4f6:	9a 95       	dec	r25
 4f8:	66 0f       	add	r22, r22
 4fa:	77 1f       	adc	r23, r23
 4fc:	88 1f       	adc	r24, r24
 4fe:	da f7       	brpl	.-10     	; 0x4f6 <__floatsisf+0x62>
 500:	88 0f       	add	r24, r24
 502:	96 95       	lsr	r25
 504:	87 95       	ror	r24
 506:	97 f9       	bld	r25, 7
 508:	08 95       	ret

0000050a <__fp_inf>:
 50a:	97 f9       	bld	r25, 7
 50c:	9f 67       	ori	r25, 0x7F	; 127
 50e:	80 e8       	ldi	r24, 0x80	; 128
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	08 95       	ret

00000516 <__fp_nan>:
 516:	9f ef       	ldi	r25, 0xFF	; 255
 518:	80 ec       	ldi	r24, 0xC0	; 192
 51a:	08 95       	ret

0000051c <__fp_pscA>:
 51c:	00 24       	eor	r0, r0
 51e:	0a 94       	dec	r0
 520:	16 16       	cp	r1, r22
 522:	17 06       	cpc	r1, r23
 524:	18 06       	cpc	r1, r24
 526:	09 06       	cpc	r0, r25
 528:	08 95       	ret

0000052a <__fp_pscB>:
 52a:	00 24       	eor	r0, r0
 52c:	0a 94       	dec	r0
 52e:	12 16       	cp	r1, r18
 530:	13 06       	cpc	r1, r19
 532:	14 06       	cpc	r1, r20
 534:	05 06       	cpc	r0, r21
 536:	08 95       	ret

00000538 <__fp_round>:
 538:	09 2e       	mov	r0, r25
 53a:	03 94       	inc	r0
 53c:	00 0c       	add	r0, r0
 53e:	11 f4       	brne	.+4      	; 0x544 <__fp_round+0xc>
 540:	88 23       	and	r24, r24
 542:	52 f0       	brmi	.+20     	; 0x558 <__fp_round+0x20>
 544:	bb 0f       	add	r27, r27
 546:	40 f4       	brcc	.+16     	; 0x558 <__fp_round+0x20>
 548:	bf 2b       	or	r27, r31
 54a:	11 f4       	brne	.+4      	; 0x550 <__fp_round+0x18>
 54c:	60 ff       	sbrs	r22, 0
 54e:	04 c0       	rjmp	.+8      	; 0x558 <__fp_round+0x20>
 550:	6f 5f       	subi	r22, 0xFF	; 255
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	08 95       	ret

0000055a <__fp_split3>:
 55a:	57 fd       	sbrc	r21, 7
 55c:	90 58       	subi	r25, 0x80	; 128
 55e:	44 0f       	add	r20, r20
 560:	55 1f       	adc	r21, r21
 562:	59 f0       	breq	.+22     	; 0x57a <__fp_splitA+0x10>
 564:	5f 3f       	cpi	r21, 0xFF	; 255
 566:	71 f0       	breq	.+28     	; 0x584 <__fp_splitA+0x1a>
 568:	47 95       	ror	r20

0000056a <__fp_splitA>:
 56a:	88 0f       	add	r24, r24
 56c:	97 fb       	bst	r25, 7
 56e:	99 1f       	adc	r25, r25
 570:	61 f0       	breq	.+24     	; 0x58a <__fp_splitA+0x20>
 572:	9f 3f       	cpi	r25, 0xFF	; 255
 574:	79 f0       	breq	.+30     	; 0x594 <__fp_splitA+0x2a>
 576:	87 95       	ror	r24
 578:	08 95       	ret
 57a:	12 16       	cp	r1, r18
 57c:	13 06       	cpc	r1, r19
 57e:	14 06       	cpc	r1, r20
 580:	55 1f       	adc	r21, r21
 582:	f2 cf       	rjmp	.-28     	; 0x568 <__fp_split3+0xe>
 584:	46 95       	lsr	r20
 586:	f1 df       	rcall	.-30     	; 0x56a <__fp_splitA>
 588:	08 c0       	rjmp	.+16     	; 0x59a <__fp_splitA+0x30>
 58a:	16 16       	cp	r1, r22
 58c:	17 06       	cpc	r1, r23
 58e:	18 06       	cpc	r1, r24
 590:	99 1f       	adc	r25, r25
 592:	f1 cf       	rjmp	.-30     	; 0x576 <__fp_splitA+0xc>
 594:	86 95       	lsr	r24
 596:	71 05       	cpc	r23, r1
 598:	61 05       	cpc	r22, r1
 59a:	08 94       	sec
 59c:	08 95       	ret

0000059e <__fp_zero>:
 59e:	e8 94       	clt

000005a0 <__fp_szero>:
 5a0:	bb 27       	eor	r27, r27
 5a2:	66 27       	eor	r22, r22
 5a4:	77 27       	eor	r23, r23
 5a6:	cb 01       	movw	r24, r22
 5a8:	97 f9       	bld	r25, 7
 5aa:	08 95       	ret

000005ac <__mulsf3>:
 5ac:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__mulsf3x>
 5b0:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>
 5b4:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_pscA>
 5b8:	38 f0       	brcs	.+14     	; 0x5c8 <__mulsf3+0x1c>
 5ba:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscB>
 5be:	20 f0       	brcs	.+8      	; 0x5c8 <__mulsf3+0x1c>
 5c0:	95 23       	and	r25, r21
 5c2:	11 f0       	breq	.+4      	; 0x5c8 <__mulsf3+0x1c>
 5c4:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 5c8:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>
 5cc:	11 24       	eor	r1, r1
 5ce:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>

000005d2 <__mulsf3x>:
 5d2:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_split3>
 5d6:	70 f3       	brcs	.-36     	; 0x5b4 <__mulsf3+0x8>

000005d8 <__mulsf3_pse>:
 5d8:	95 9f       	mul	r25, r21
 5da:	c1 f3       	breq	.-16     	; 0x5cc <__mulsf3+0x20>
 5dc:	95 0f       	add	r25, r21
 5de:	50 e0       	ldi	r21, 0x00	; 0
 5e0:	55 1f       	adc	r21, r21
 5e2:	62 9f       	mul	r22, r18
 5e4:	f0 01       	movw	r30, r0
 5e6:	72 9f       	mul	r23, r18
 5e8:	bb 27       	eor	r27, r27
 5ea:	f0 0d       	add	r31, r0
 5ec:	b1 1d       	adc	r27, r1
 5ee:	63 9f       	mul	r22, r19
 5f0:	aa 27       	eor	r26, r26
 5f2:	f0 0d       	add	r31, r0
 5f4:	b1 1d       	adc	r27, r1
 5f6:	aa 1f       	adc	r26, r26
 5f8:	64 9f       	mul	r22, r20
 5fa:	66 27       	eor	r22, r22
 5fc:	b0 0d       	add	r27, r0
 5fe:	a1 1d       	adc	r26, r1
 600:	66 1f       	adc	r22, r22
 602:	82 9f       	mul	r24, r18
 604:	22 27       	eor	r18, r18
 606:	b0 0d       	add	r27, r0
 608:	a1 1d       	adc	r26, r1
 60a:	62 1f       	adc	r22, r18
 60c:	73 9f       	mul	r23, r19
 60e:	b0 0d       	add	r27, r0
 610:	a1 1d       	adc	r26, r1
 612:	62 1f       	adc	r22, r18
 614:	83 9f       	mul	r24, r19
 616:	a0 0d       	add	r26, r0
 618:	61 1d       	adc	r22, r1
 61a:	22 1f       	adc	r18, r18
 61c:	74 9f       	mul	r23, r20
 61e:	33 27       	eor	r19, r19
 620:	a0 0d       	add	r26, r0
 622:	61 1d       	adc	r22, r1
 624:	23 1f       	adc	r18, r19
 626:	84 9f       	mul	r24, r20
 628:	60 0d       	add	r22, r0
 62a:	21 1d       	adc	r18, r1
 62c:	82 2f       	mov	r24, r18
 62e:	76 2f       	mov	r23, r22
 630:	6a 2f       	mov	r22, r26
 632:	11 24       	eor	r1, r1
 634:	9f 57       	subi	r25, 0x7F	; 127
 636:	50 40       	sbci	r21, 0x00	; 0
 638:	9a f0       	brmi	.+38     	; 0x660 <__mulsf3_pse+0x88>
 63a:	f1 f0       	breq	.+60     	; 0x678 <__mulsf3_pse+0xa0>
 63c:	88 23       	and	r24, r24
 63e:	4a f0       	brmi	.+18     	; 0x652 <__mulsf3_pse+0x7a>
 640:	ee 0f       	add	r30, r30
 642:	ff 1f       	adc	r31, r31
 644:	bb 1f       	adc	r27, r27
 646:	66 1f       	adc	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	88 1f       	adc	r24, r24
 64c:	91 50       	subi	r25, 0x01	; 1
 64e:	50 40       	sbci	r21, 0x00	; 0
 650:	a9 f7       	brne	.-22     	; 0x63c <__mulsf3_pse+0x64>
 652:	9e 3f       	cpi	r25, 0xFE	; 254
 654:	51 05       	cpc	r21, r1
 656:	80 f0       	brcs	.+32     	; 0x678 <__mulsf3_pse+0xa0>
 658:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 65c:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 660:	5f 3f       	cpi	r21, 0xFF	; 255
 662:	e4 f3       	brlt	.-8      	; 0x65c <__mulsf3_pse+0x84>
 664:	98 3e       	cpi	r25, 0xE8	; 232
 666:	d4 f3       	brlt	.-12     	; 0x65c <__mulsf3_pse+0x84>
 668:	86 95       	lsr	r24
 66a:	77 95       	ror	r23
 66c:	67 95       	ror	r22
 66e:	b7 95       	ror	r27
 670:	f7 95       	ror	r31
 672:	e7 95       	ror	r30
 674:	9f 5f       	subi	r25, 0xFF	; 255
 676:	c1 f7       	brne	.-16     	; 0x668 <__mulsf3_pse+0x90>
 678:	fe 2b       	or	r31, r30
 67a:	88 0f       	add	r24, r24
 67c:	91 1d       	adc	r25, r1
 67e:	96 95       	lsr	r25
 680:	87 95       	ror	r24
 682:	97 f9       	bld	r25, 7
 684:	08 95       	ret

00000686 <__divmodhi4>:
 686:	97 fb       	bst	r25, 7
 688:	07 2e       	mov	r0, r23
 68a:	16 f4       	brtc	.+4      	; 0x690 <__divmodhi4+0xa>
 68c:	00 94       	com	r0
 68e:	07 d0       	rcall	.+14     	; 0x69e <__divmodhi4_neg1>
 690:	77 fd       	sbrc	r23, 7
 692:	09 d0       	rcall	.+18     	; 0x6a6 <__divmodhi4_neg2>
 694:	0e 94 66 03 	call	0x6cc	; 0x6cc <__udivmodhi4>
 698:	07 fc       	sbrc	r0, 7
 69a:	05 d0       	rcall	.+10     	; 0x6a6 <__divmodhi4_neg2>
 69c:	3e f4       	brtc	.+14     	; 0x6ac <__divmodhi4_exit>

0000069e <__divmodhi4_neg1>:
 69e:	90 95       	com	r25
 6a0:	81 95       	neg	r24
 6a2:	9f 4f       	sbci	r25, 0xFF	; 255
 6a4:	08 95       	ret

000006a6 <__divmodhi4_neg2>:
 6a6:	70 95       	com	r23
 6a8:	61 95       	neg	r22
 6aa:	7f 4f       	sbci	r23, 0xFF	; 255

000006ac <__divmodhi4_exit>:
 6ac:	08 95       	ret

000006ae <__umulhisi3>:
 6ae:	a2 9f       	mul	r26, r18
 6b0:	b0 01       	movw	r22, r0
 6b2:	b3 9f       	mul	r27, r19
 6b4:	c0 01       	movw	r24, r0
 6b6:	a3 9f       	mul	r26, r19
 6b8:	70 0d       	add	r23, r0
 6ba:	81 1d       	adc	r24, r1
 6bc:	11 24       	eor	r1, r1
 6be:	91 1d       	adc	r25, r1
 6c0:	b2 9f       	mul	r27, r18
 6c2:	70 0d       	add	r23, r0
 6c4:	81 1d       	adc	r24, r1
 6c6:	11 24       	eor	r1, r1
 6c8:	91 1d       	adc	r25, r1
 6ca:	08 95       	ret

000006cc <__udivmodhi4>:
 6cc:	aa 1b       	sub	r26, r26
 6ce:	bb 1b       	sub	r27, r27
 6d0:	51 e1       	ldi	r21, 0x11	; 17
 6d2:	07 c0       	rjmp	.+14     	; 0x6e2 <__udivmodhi4_ep>

000006d4 <__udivmodhi4_loop>:
 6d4:	aa 1f       	adc	r26, r26
 6d6:	bb 1f       	adc	r27, r27
 6d8:	a6 17       	cp	r26, r22
 6da:	b7 07       	cpc	r27, r23
 6dc:	10 f0       	brcs	.+4      	; 0x6e2 <__udivmodhi4_ep>
 6de:	a6 1b       	sub	r26, r22
 6e0:	b7 0b       	sbc	r27, r23

000006e2 <__udivmodhi4_ep>:
 6e2:	88 1f       	adc	r24, r24
 6e4:	99 1f       	adc	r25, r25
 6e6:	5a 95       	dec	r21
 6e8:	a9 f7       	brne	.-22     	; 0x6d4 <__udivmodhi4_loop>
 6ea:	80 95       	com	r24
 6ec:	90 95       	com	r25
 6ee:	bc 01       	movw	r22, r24
 6f0:	cd 01       	movw	r24, r26
 6f2:	08 95       	ret

000006f4 <snprintf>:
 6f4:	ae e0       	ldi	r26, 0x0E	; 14
 6f6:	b0 e0       	ldi	r27, 0x00	; 0
 6f8:	e0 e8       	ldi	r30, 0x80	; 128
 6fa:	f3 e0       	ldi	r31, 0x03	; 3
 6fc:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__prologue_saves__+0x1c>
 700:	0d 89       	ldd	r16, Y+21	; 0x15
 702:	1e 89       	ldd	r17, Y+22	; 0x16
 704:	8f 89       	ldd	r24, Y+23	; 0x17
 706:	98 8d       	ldd	r25, Y+24	; 0x18
 708:	26 e0       	ldi	r18, 0x06	; 6
 70a:	2c 83       	std	Y+4, r18	; 0x04
 70c:	1a 83       	std	Y+2, r17	; 0x02
 70e:	09 83       	std	Y+1, r16	; 0x01
 710:	97 ff       	sbrs	r25, 7
 712:	02 c0       	rjmp	.+4      	; 0x718 <snprintf+0x24>
 714:	80 e0       	ldi	r24, 0x00	; 0
 716:	90 e8       	ldi	r25, 0x80	; 128
 718:	01 97       	sbiw	r24, 0x01	; 1
 71a:	9e 83       	std	Y+6, r25	; 0x06
 71c:	8d 83       	std	Y+5, r24	; 0x05
 71e:	ae 01       	movw	r20, r28
 720:	45 5e       	subi	r20, 0xE5	; 229
 722:	5f 4f       	sbci	r21, 0xFF	; 255
 724:	69 8d       	ldd	r22, Y+25	; 0x19
 726:	7a 8d       	ldd	r23, Y+26	; 0x1a
 728:	ce 01       	movw	r24, r28
 72a:	01 96       	adiw	r24, 0x01	; 1
 72c:	0e 94 aa 03 	call	0x754	; 0x754 <vfprintf>
 730:	4d 81       	ldd	r20, Y+5	; 0x05
 732:	5e 81       	ldd	r21, Y+6	; 0x06
 734:	57 fd       	sbrc	r21, 7
 736:	0a c0       	rjmp	.+20     	; 0x74c <snprintf+0x58>
 738:	2f 81       	ldd	r18, Y+7	; 0x07
 73a:	38 85       	ldd	r19, Y+8	; 0x08
 73c:	42 17       	cp	r20, r18
 73e:	53 07       	cpc	r21, r19
 740:	0c f4       	brge	.+2      	; 0x744 <snprintf+0x50>
 742:	9a 01       	movw	r18, r20
 744:	f8 01       	movw	r30, r16
 746:	e2 0f       	add	r30, r18
 748:	f3 1f       	adc	r31, r19
 74a:	10 82       	st	Z, r1
 74c:	2e 96       	adiw	r28, 0x0e	; 14
 74e:	e4 e0       	ldi	r30, 0x04	; 4
 750:	0c 94 65 06 	jmp	0xcca	; 0xcca <__epilogue_restores__+0x1c>

00000754 <vfprintf>:
 754:	ab e0       	ldi	r26, 0x0B	; 11
 756:	b0 e0       	ldi	r27, 0x00	; 0
 758:	e0 eb       	ldi	r30, 0xB0	; 176
 75a:	f3 e0       	ldi	r31, 0x03	; 3
 75c:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__prologue_saves__>
 760:	6c 01       	movw	r12, r24
 762:	7b 01       	movw	r14, r22
 764:	8a 01       	movw	r16, r20
 766:	fc 01       	movw	r30, r24
 768:	17 82       	std	Z+7, r1	; 0x07
 76a:	16 82       	std	Z+6, r1	; 0x06
 76c:	83 81       	ldd	r24, Z+3	; 0x03
 76e:	81 ff       	sbrs	r24, 1
 770:	cc c1       	rjmp	.+920    	; 0xb0a <__stack+0x20b>
 772:	ce 01       	movw	r24, r28
 774:	01 96       	adiw	r24, 0x01	; 1
 776:	3c 01       	movw	r6, r24
 778:	f6 01       	movw	r30, r12
 77a:	93 81       	ldd	r25, Z+3	; 0x03
 77c:	f7 01       	movw	r30, r14
 77e:	93 fd       	sbrc	r25, 3
 780:	85 91       	lpm	r24, Z+
 782:	93 ff       	sbrs	r25, 3
 784:	81 91       	ld	r24, Z+
 786:	7f 01       	movw	r14, r30
 788:	88 23       	and	r24, r24
 78a:	09 f4       	brne	.+2      	; 0x78e <vfprintf+0x3a>
 78c:	ba c1       	rjmp	.+884    	; 0xb02 <__stack+0x203>
 78e:	85 32       	cpi	r24, 0x25	; 37
 790:	39 f4       	brne	.+14     	; 0x7a0 <vfprintf+0x4c>
 792:	93 fd       	sbrc	r25, 3
 794:	85 91       	lpm	r24, Z+
 796:	93 ff       	sbrs	r25, 3
 798:	81 91       	ld	r24, Z+
 79a:	7f 01       	movw	r14, r30
 79c:	85 32       	cpi	r24, 0x25	; 37
 79e:	29 f4       	brne	.+10     	; 0x7aa <vfprintf+0x56>
 7a0:	b6 01       	movw	r22, r12
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 7a8:	e7 cf       	rjmp	.-50     	; 0x778 <vfprintf+0x24>
 7aa:	91 2c       	mov	r9, r1
 7ac:	21 2c       	mov	r2, r1
 7ae:	31 2c       	mov	r3, r1
 7b0:	ff e1       	ldi	r31, 0x1F	; 31
 7b2:	f3 15       	cp	r31, r3
 7b4:	d8 f0       	brcs	.+54     	; 0x7ec <vfprintf+0x98>
 7b6:	8b 32       	cpi	r24, 0x2B	; 43
 7b8:	79 f0       	breq	.+30     	; 0x7d8 <vfprintf+0x84>
 7ba:	38 f4       	brcc	.+14     	; 0x7ca <vfprintf+0x76>
 7bc:	80 32       	cpi	r24, 0x20	; 32
 7be:	79 f0       	breq	.+30     	; 0x7de <vfprintf+0x8a>
 7c0:	83 32       	cpi	r24, 0x23	; 35
 7c2:	a1 f4       	brne	.+40     	; 0x7ec <vfprintf+0x98>
 7c4:	23 2d       	mov	r18, r3
 7c6:	20 61       	ori	r18, 0x10	; 16
 7c8:	1d c0       	rjmp	.+58     	; 0x804 <vfprintf+0xb0>
 7ca:	8d 32       	cpi	r24, 0x2D	; 45
 7cc:	61 f0       	breq	.+24     	; 0x7e6 <vfprintf+0x92>
 7ce:	80 33       	cpi	r24, 0x30	; 48
 7d0:	69 f4       	brne	.+26     	; 0x7ec <vfprintf+0x98>
 7d2:	23 2d       	mov	r18, r3
 7d4:	21 60       	ori	r18, 0x01	; 1
 7d6:	16 c0       	rjmp	.+44     	; 0x804 <vfprintf+0xb0>
 7d8:	83 2d       	mov	r24, r3
 7da:	82 60       	ori	r24, 0x02	; 2
 7dc:	38 2e       	mov	r3, r24
 7de:	e3 2d       	mov	r30, r3
 7e0:	e4 60       	ori	r30, 0x04	; 4
 7e2:	3e 2e       	mov	r3, r30
 7e4:	2a c0       	rjmp	.+84     	; 0x83a <vfprintf+0xe6>
 7e6:	f3 2d       	mov	r31, r3
 7e8:	f8 60       	ori	r31, 0x08	; 8
 7ea:	1d c0       	rjmp	.+58     	; 0x826 <vfprintf+0xd2>
 7ec:	37 fc       	sbrc	r3, 7
 7ee:	2d c0       	rjmp	.+90     	; 0x84a <vfprintf+0xf6>
 7f0:	20 ed       	ldi	r18, 0xD0	; 208
 7f2:	28 0f       	add	r18, r24
 7f4:	2a 30       	cpi	r18, 0x0A	; 10
 7f6:	40 f0       	brcs	.+16     	; 0x808 <vfprintf+0xb4>
 7f8:	8e 32       	cpi	r24, 0x2E	; 46
 7fa:	b9 f4       	brne	.+46     	; 0x82a <vfprintf+0xd6>
 7fc:	36 fc       	sbrc	r3, 6
 7fe:	81 c1       	rjmp	.+770    	; 0xb02 <__stack+0x203>
 800:	23 2d       	mov	r18, r3
 802:	20 64       	ori	r18, 0x40	; 64
 804:	32 2e       	mov	r3, r18
 806:	19 c0       	rjmp	.+50     	; 0x83a <vfprintf+0xe6>
 808:	36 fe       	sbrs	r3, 6
 80a:	06 c0       	rjmp	.+12     	; 0x818 <vfprintf+0xc4>
 80c:	8a e0       	ldi	r24, 0x0A	; 10
 80e:	98 9e       	mul	r9, r24
 810:	20 0d       	add	r18, r0
 812:	11 24       	eor	r1, r1
 814:	92 2e       	mov	r9, r18
 816:	11 c0       	rjmp	.+34     	; 0x83a <vfprintf+0xe6>
 818:	ea e0       	ldi	r30, 0x0A	; 10
 81a:	2e 9e       	mul	r2, r30
 81c:	20 0d       	add	r18, r0
 81e:	11 24       	eor	r1, r1
 820:	22 2e       	mov	r2, r18
 822:	f3 2d       	mov	r31, r3
 824:	f0 62       	ori	r31, 0x20	; 32
 826:	3f 2e       	mov	r3, r31
 828:	08 c0       	rjmp	.+16     	; 0x83a <vfprintf+0xe6>
 82a:	8c 36       	cpi	r24, 0x6C	; 108
 82c:	21 f4       	brne	.+8      	; 0x836 <vfprintf+0xe2>
 82e:	83 2d       	mov	r24, r3
 830:	80 68       	ori	r24, 0x80	; 128
 832:	38 2e       	mov	r3, r24
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0xe6>
 836:	88 36       	cpi	r24, 0x68	; 104
 838:	41 f4       	brne	.+16     	; 0x84a <vfprintf+0xf6>
 83a:	f7 01       	movw	r30, r14
 83c:	93 fd       	sbrc	r25, 3
 83e:	85 91       	lpm	r24, Z+
 840:	93 ff       	sbrs	r25, 3
 842:	81 91       	ld	r24, Z+
 844:	7f 01       	movw	r14, r30
 846:	81 11       	cpse	r24, r1
 848:	b3 cf       	rjmp	.-154    	; 0x7b0 <vfprintf+0x5c>
 84a:	98 2f       	mov	r25, r24
 84c:	9f 7d       	andi	r25, 0xDF	; 223
 84e:	95 54       	subi	r25, 0x45	; 69
 850:	93 30       	cpi	r25, 0x03	; 3
 852:	28 f4       	brcc	.+10     	; 0x85e <vfprintf+0x10a>
 854:	0c 5f       	subi	r16, 0xFC	; 252
 856:	1f 4f       	sbci	r17, 0xFF	; 255
 858:	9f e3       	ldi	r25, 0x3F	; 63
 85a:	99 83       	std	Y+1, r25	; 0x01
 85c:	0d c0       	rjmp	.+26     	; 0x878 <vfprintf+0x124>
 85e:	83 36       	cpi	r24, 0x63	; 99
 860:	31 f0       	breq	.+12     	; 0x86e <vfprintf+0x11a>
 862:	83 37       	cpi	r24, 0x73	; 115
 864:	71 f0       	breq	.+28     	; 0x882 <vfprintf+0x12e>
 866:	83 35       	cpi	r24, 0x53	; 83
 868:	09 f0       	breq	.+2      	; 0x86c <vfprintf+0x118>
 86a:	59 c0       	rjmp	.+178    	; 0x91e <__stack+0x1f>
 86c:	21 c0       	rjmp	.+66     	; 0x8b0 <vfprintf+0x15c>
 86e:	f8 01       	movw	r30, r16
 870:	80 81       	ld	r24, Z
 872:	89 83       	std	Y+1, r24	; 0x01
 874:	0e 5f       	subi	r16, 0xFE	; 254
 876:	1f 4f       	sbci	r17, 0xFF	; 255
 878:	88 24       	eor	r8, r8
 87a:	83 94       	inc	r8
 87c:	91 2c       	mov	r9, r1
 87e:	53 01       	movw	r10, r6
 880:	13 c0       	rjmp	.+38     	; 0x8a8 <vfprintf+0x154>
 882:	28 01       	movw	r4, r16
 884:	f2 e0       	ldi	r31, 0x02	; 2
 886:	4f 0e       	add	r4, r31
 888:	51 1c       	adc	r5, r1
 88a:	f8 01       	movw	r30, r16
 88c:	a0 80       	ld	r10, Z
 88e:	b1 80       	ldd	r11, Z+1	; 0x01
 890:	36 fe       	sbrs	r3, 6
 892:	03 c0       	rjmp	.+6      	; 0x89a <vfprintf+0x146>
 894:	69 2d       	mov	r22, r9
 896:	70 e0       	ldi	r23, 0x00	; 0
 898:	02 c0       	rjmp	.+4      	; 0x89e <vfprintf+0x14a>
 89a:	6f ef       	ldi	r22, 0xFF	; 255
 89c:	7f ef       	ldi	r23, 0xFF	; 255
 89e:	c5 01       	movw	r24, r10
 8a0:	0e 94 96 05 	call	0xb2c	; 0xb2c <strnlen>
 8a4:	4c 01       	movw	r8, r24
 8a6:	82 01       	movw	r16, r4
 8a8:	f3 2d       	mov	r31, r3
 8aa:	ff 77       	andi	r31, 0x7F	; 127
 8ac:	3f 2e       	mov	r3, r31
 8ae:	16 c0       	rjmp	.+44     	; 0x8dc <vfprintf+0x188>
 8b0:	28 01       	movw	r4, r16
 8b2:	22 e0       	ldi	r18, 0x02	; 2
 8b4:	42 0e       	add	r4, r18
 8b6:	51 1c       	adc	r5, r1
 8b8:	f8 01       	movw	r30, r16
 8ba:	a0 80       	ld	r10, Z
 8bc:	b1 80       	ldd	r11, Z+1	; 0x01
 8be:	36 fe       	sbrs	r3, 6
 8c0:	03 c0       	rjmp	.+6      	; 0x8c8 <vfprintf+0x174>
 8c2:	69 2d       	mov	r22, r9
 8c4:	70 e0       	ldi	r23, 0x00	; 0
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x178>
 8c8:	6f ef       	ldi	r22, 0xFF	; 255
 8ca:	7f ef       	ldi	r23, 0xFF	; 255
 8cc:	c5 01       	movw	r24, r10
 8ce:	0e 94 8b 05 	call	0xb16	; 0xb16 <strnlen_P>
 8d2:	4c 01       	movw	r8, r24
 8d4:	f3 2d       	mov	r31, r3
 8d6:	f0 68       	ori	r31, 0x80	; 128
 8d8:	3f 2e       	mov	r3, r31
 8da:	82 01       	movw	r16, r4
 8dc:	33 fc       	sbrc	r3, 3
 8de:	1b c0       	rjmp	.+54     	; 0x916 <__stack+0x17>
 8e0:	82 2d       	mov	r24, r2
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	88 16       	cp	r8, r24
 8e6:	99 06       	cpc	r9, r25
 8e8:	b0 f4       	brcc	.+44     	; 0x916 <__stack+0x17>
 8ea:	b6 01       	movw	r22, r12
 8ec:	80 e2       	ldi	r24, 0x20	; 32
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 8f4:	2a 94       	dec	r2
 8f6:	f4 cf       	rjmp	.-24     	; 0x8e0 <vfprintf+0x18c>
 8f8:	f5 01       	movw	r30, r10
 8fa:	37 fc       	sbrc	r3, 7
 8fc:	85 91       	lpm	r24, Z+
 8fe:	37 fe       	sbrs	r3, 7
 900:	81 91       	ld	r24, Z+
 902:	5f 01       	movw	r10, r30
 904:	b6 01       	movw	r22, r12
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 90c:	21 10       	cpse	r2, r1
 90e:	2a 94       	dec	r2
 910:	21 e0       	ldi	r18, 0x01	; 1
 912:	82 1a       	sub	r8, r18
 914:	91 08       	sbc	r9, r1
 916:	81 14       	cp	r8, r1
 918:	91 04       	cpc	r9, r1
 91a:	71 f7       	brne	.-36     	; 0x8f8 <vfprintf+0x1a4>
 91c:	e8 c0       	rjmp	.+464    	; 0xaee <__stack+0x1ef>
 91e:	84 36       	cpi	r24, 0x64	; 100
 920:	11 f0       	breq	.+4      	; 0x926 <__stack+0x27>
 922:	89 36       	cpi	r24, 0x69	; 105
 924:	41 f5       	brne	.+80     	; 0x976 <__stack+0x77>
 926:	f8 01       	movw	r30, r16
 928:	37 fe       	sbrs	r3, 7
 92a:	07 c0       	rjmp	.+14     	; 0x93a <__stack+0x3b>
 92c:	60 81       	ld	r22, Z
 92e:	71 81       	ldd	r23, Z+1	; 0x01
 930:	82 81       	ldd	r24, Z+2	; 0x02
 932:	93 81       	ldd	r25, Z+3	; 0x03
 934:	0c 5f       	subi	r16, 0xFC	; 252
 936:	1f 4f       	sbci	r17, 0xFF	; 255
 938:	08 c0       	rjmp	.+16     	; 0x94a <__stack+0x4b>
 93a:	60 81       	ld	r22, Z
 93c:	71 81       	ldd	r23, Z+1	; 0x01
 93e:	07 2e       	mov	r0, r23
 940:	00 0c       	add	r0, r0
 942:	88 0b       	sbc	r24, r24
 944:	99 0b       	sbc	r25, r25
 946:	0e 5f       	subi	r16, 0xFE	; 254
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	f3 2d       	mov	r31, r3
 94c:	ff 76       	andi	r31, 0x6F	; 111
 94e:	3f 2e       	mov	r3, r31
 950:	97 ff       	sbrs	r25, 7
 952:	09 c0       	rjmp	.+18     	; 0x966 <__stack+0x67>
 954:	90 95       	com	r25
 956:	80 95       	com	r24
 958:	70 95       	com	r23
 95a:	61 95       	neg	r22
 95c:	7f 4f       	sbci	r23, 0xFF	; 255
 95e:	8f 4f       	sbci	r24, 0xFF	; 255
 960:	9f 4f       	sbci	r25, 0xFF	; 255
 962:	f0 68       	ori	r31, 0x80	; 128
 964:	3f 2e       	mov	r3, r31
 966:	2a e0       	ldi	r18, 0x0A	; 10
 968:	30 e0       	ldi	r19, 0x00	; 0
 96a:	a3 01       	movw	r20, r6
 96c:	0e 94 dd 05 	call	0xbba	; 0xbba <__ultoa_invert>
 970:	88 2e       	mov	r8, r24
 972:	86 18       	sub	r8, r6
 974:	45 c0       	rjmp	.+138    	; 0xa00 <__stack+0x101>
 976:	85 37       	cpi	r24, 0x75	; 117
 978:	31 f4       	brne	.+12     	; 0x986 <__stack+0x87>
 97a:	23 2d       	mov	r18, r3
 97c:	2f 7e       	andi	r18, 0xEF	; 239
 97e:	b2 2e       	mov	r11, r18
 980:	2a e0       	ldi	r18, 0x0A	; 10
 982:	30 e0       	ldi	r19, 0x00	; 0
 984:	25 c0       	rjmp	.+74     	; 0x9d0 <__stack+0xd1>
 986:	93 2d       	mov	r25, r3
 988:	99 7f       	andi	r25, 0xF9	; 249
 98a:	b9 2e       	mov	r11, r25
 98c:	8f 36       	cpi	r24, 0x6F	; 111
 98e:	c1 f0       	breq	.+48     	; 0x9c0 <__stack+0xc1>
 990:	18 f4       	brcc	.+6      	; 0x998 <__stack+0x99>
 992:	88 35       	cpi	r24, 0x58	; 88
 994:	79 f0       	breq	.+30     	; 0x9b4 <__stack+0xb5>
 996:	b5 c0       	rjmp	.+362    	; 0xb02 <__stack+0x203>
 998:	80 37       	cpi	r24, 0x70	; 112
 99a:	19 f0       	breq	.+6      	; 0x9a2 <__stack+0xa3>
 99c:	88 37       	cpi	r24, 0x78	; 120
 99e:	21 f0       	breq	.+8      	; 0x9a8 <__stack+0xa9>
 9a0:	b0 c0       	rjmp	.+352    	; 0xb02 <__stack+0x203>
 9a2:	e9 2f       	mov	r30, r25
 9a4:	e0 61       	ori	r30, 0x10	; 16
 9a6:	be 2e       	mov	r11, r30
 9a8:	b4 fe       	sbrs	r11, 4
 9aa:	0d c0       	rjmp	.+26     	; 0x9c6 <__stack+0xc7>
 9ac:	fb 2d       	mov	r31, r11
 9ae:	f4 60       	ori	r31, 0x04	; 4
 9b0:	bf 2e       	mov	r11, r31
 9b2:	09 c0       	rjmp	.+18     	; 0x9c6 <__stack+0xc7>
 9b4:	34 fe       	sbrs	r3, 4
 9b6:	0a c0       	rjmp	.+20     	; 0x9cc <__stack+0xcd>
 9b8:	29 2f       	mov	r18, r25
 9ba:	26 60       	ori	r18, 0x06	; 6
 9bc:	b2 2e       	mov	r11, r18
 9be:	06 c0       	rjmp	.+12     	; 0x9cc <__stack+0xcd>
 9c0:	28 e0       	ldi	r18, 0x08	; 8
 9c2:	30 e0       	ldi	r19, 0x00	; 0
 9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <__stack+0xd1>
 9c6:	20 e1       	ldi	r18, 0x10	; 16
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <__stack+0xd1>
 9cc:	20 e1       	ldi	r18, 0x10	; 16
 9ce:	32 e0       	ldi	r19, 0x02	; 2
 9d0:	f8 01       	movw	r30, r16
 9d2:	b7 fe       	sbrs	r11, 7
 9d4:	07 c0       	rjmp	.+14     	; 0x9e4 <__stack+0xe5>
 9d6:	60 81       	ld	r22, Z
 9d8:	71 81       	ldd	r23, Z+1	; 0x01
 9da:	82 81       	ldd	r24, Z+2	; 0x02
 9dc:	93 81       	ldd	r25, Z+3	; 0x03
 9de:	0c 5f       	subi	r16, 0xFC	; 252
 9e0:	1f 4f       	sbci	r17, 0xFF	; 255
 9e2:	06 c0       	rjmp	.+12     	; 0x9f0 <__stack+0xf1>
 9e4:	60 81       	ld	r22, Z
 9e6:	71 81       	ldd	r23, Z+1	; 0x01
 9e8:	80 e0       	ldi	r24, 0x00	; 0
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	0e 5f       	subi	r16, 0xFE	; 254
 9ee:	1f 4f       	sbci	r17, 0xFF	; 255
 9f0:	a3 01       	movw	r20, r6
 9f2:	0e 94 dd 05 	call	0xbba	; 0xbba <__ultoa_invert>
 9f6:	88 2e       	mov	r8, r24
 9f8:	86 18       	sub	r8, r6
 9fa:	fb 2d       	mov	r31, r11
 9fc:	ff 77       	andi	r31, 0x7F	; 127
 9fe:	3f 2e       	mov	r3, r31
 a00:	36 fe       	sbrs	r3, 6
 a02:	0d c0       	rjmp	.+26     	; 0xa1e <__stack+0x11f>
 a04:	23 2d       	mov	r18, r3
 a06:	2e 7f       	andi	r18, 0xFE	; 254
 a08:	a2 2e       	mov	r10, r18
 a0a:	89 14       	cp	r8, r9
 a0c:	58 f4       	brcc	.+22     	; 0xa24 <__stack+0x125>
 a0e:	34 fe       	sbrs	r3, 4
 a10:	0b c0       	rjmp	.+22     	; 0xa28 <__stack+0x129>
 a12:	32 fc       	sbrc	r3, 2
 a14:	09 c0       	rjmp	.+18     	; 0xa28 <__stack+0x129>
 a16:	83 2d       	mov	r24, r3
 a18:	8e 7e       	andi	r24, 0xEE	; 238
 a1a:	a8 2e       	mov	r10, r24
 a1c:	05 c0       	rjmp	.+10     	; 0xa28 <__stack+0x129>
 a1e:	b8 2c       	mov	r11, r8
 a20:	a3 2c       	mov	r10, r3
 a22:	03 c0       	rjmp	.+6      	; 0xa2a <__stack+0x12b>
 a24:	b8 2c       	mov	r11, r8
 a26:	01 c0       	rjmp	.+2      	; 0xa2a <__stack+0x12b>
 a28:	b9 2c       	mov	r11, r9
 a2a:	a4 fe       	sbrs	r10, 4
 a2c:	0f c0       	rjmp	.+30     	; 0xa4c <__stack+0x14d>
 a2e:	fe 01       	movw	r30, r28
 a30:	e8 0d       	add	r30, r8
 a32:	f1 1d       	adc	r31, r1
 a34:	80 81       	ld	r24, Z
 a36:	80 33       	cpi	r24, 0x30	; 48
 a38:	21 f4       	brne	.+8      	; 0xa42 <__stack+0x143>
 a3a:	9a 2d       	mov	r25, r10
 a3c:	99 7e       	andi	r25, 0xE9	; 233
 a3e:	a9 2e       	mov	r10, r25
 a40:	09 c0       	rjmp	.+18     	; 0xa54 <__stack+0x155>
 a42:	a2 fe       	sbrs	r10, 2
 a44:	06 c0       	rjmp	.+12     	; 0xa52 <__stack+0x153>
 a46:	b3 94       	inc	r11
 a48:	b3 94       	inc	r11
 a4a:	04 c0       	rjmp	.+8      	; 0xa54 <__stack+0x155>
 a4c:	8a 2d       	mov	r24, r10
 a4e:	86 78       	andi	r24, 0x86	; 134
 a50:	09 f0       	breq	.+2      	; 0xa54 <__stack+0x155>
 a52:	b3 94       	inc	r11
 a54:	a3 fc       	sbrc	r10, 3
 a56:	11 c0       	rjmp	.+34     	; 0xa7a <__stack+0x17b>
 a58:	a0 fe       	sbrs	r10, 0
 a5a:	06 c0       	rjmp	.+12     	; 0xa68 <__stack+0x169>
 a5c:	b2 14       	cp	r11, r2
 a5e:	88 f4       	brcc	.+34     	; 0xa82 <__stack+0x183>
 a60:	28 0c       	add	r2, r8
 a62:	92 2c       	mov	r9, r2
 a64:	9b 18       	sub	r9, r11
 a66:	0e c0       	rjmp	.+28     	; 0xa84 <__stack+0x185>
 a68:	b2 14       	cp	r11, r2
 a6a:	60 f4       	brcc	.+24     	; 0xa84 <__stack+0x185>
 a6c:	b6 01       	movw	r22, r12
 a6e:	80 e2       	ldi	r24, 0x20	; 32
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 a76:	b3 94       	inc	r11
 a78:	f7 cf       	rjmp	.-18     	; 0xa68 <__stack+0x169>
 a7a:	b2 14       	cp	r11, r2
 a7c:	18 f4       	brcc	.+6      	; 0xa84 <__stack+0x185>
 a7e:	2b 18       	sub	r2, r11
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <__stack+0x187>
 a82:	98 2c       	mov	r9, r8
 a84:	21 2c       	mov	r2, r1
 a86:	a4 fe       	sbrs	r10, 4
 a88:	10 c0       	rjmp	.+32     	; 0xaaa <__stack+0x1ab>
 a8a:	b6 01       	movw	r22, r12
 a8c:	80 e3       	ldi	r24, 0x30	; 48
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 a94:	a2 fe       	sbrs	r10, 2
 a96:	17 c0       	rjmp	.+46     	; 0xac6 <__stack+0x1c7>
 a98:	a1 fc       	sbrc	r10, 1
 a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <__stack+0x1a3>
 a9c:	88 e7       	ldi	r24, 0x78	; 120
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <__stack+0x1a7>
 aa2:	88 e5       	ldi	r24, 0x58	; 88
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	b6 01       	movw	r22, r12
 aa8:	0c c0       	rjmp	.+24     	; 0xac2 <__stack+0x1c3>
 aaa:	8a 2d       	mov	r24, r10
 aac:	86 78       	andi	r24, 0x86	; 134
 aae:	59 f0       	breq	.+22     	; 0xac6 <__stack+0x1c7>
 ab0:	a1 fe       	sbrs	r10, 1
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <__stack+0x1b9>
 ab4:	8b e2       	ldi	r24, 0x2B	; 43
 ab6:	01 c0       	rjmp	.+2      	; 0xaba <__stack+0x1bb>
 ab8:	80 e2       	ldi	r24, 0x20	; 32
 aba:	a7 fc       	sbrc	r10, 7
 abc:	8d e2       	ldi	r24, 0x2D	; 45
 abe:	b6 01       	movw	r22, r12
 ac0:	90 e0       	ldi	r25, 0x00	; 0
 ac2:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 ac6:	89 14       	cp	r8, r9
 ac8:	38 f4       	brcc	.+14     	; 0xad8 <__stack+0x1d9>
 aca:	b6 01       	movw	r22, r12
 acc:	80 e3       	ldi	r24, 0x30	; 48
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 ad4:	9a 94       	dec	r9
 ad6:	f7 cf       	rjmp	.-18     	; 0xac6 <__stack+0x1c7>
 ad8:	8a 94       	dec	r8
 ada:	f3 01       	movw	r30, r6
 adc:	e8 0d       	add	r30, r8
 ade:	f1 1d       	adc	r31, r1
 ae0:	80 81       	ld	r24, Z
 ae2:	b6 01       	movw	r22, r12
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 aea:	81 10       	cpse	r8, r1
 aec:	f5 cf       	rjmp	.-22     	; 0xad8 <__stack+0x1d9>
 aee:	22 20       	and	r2, r2
 af0:	09 f4       	brne	.+2      	; 0xaf4 <__stack+0x1f5>
 af2:	42 ce       	rjmp	.-892    	; 0x778 <vfprintf+0x24>
 af4:	b6 01       	movw	r22, r12
 af6:	80 e2       	ldi	r24, 0x20	; 32
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	0e 94 a1 05 	call	0xb42	; 0xb42 <fputc>
 afe:	2a 94       	dec	r2
 b00:	f6 cf       	rjmp	.-20     	; 0xaee <__stack+0x1ef>
 b02:	f6 01       	movw	r30, r12
 b04:	86 81       	ldd	r24, Z+6	; 0x06
 b06:	97 81       	ldd	r25, Z+7	; 0x07
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <__stack+0x20f>
 b0a:	8f ef       	ldi	r24, 0xFF	; 255
 b0c:	9f ef       	ldi	r25, 0xFF	; 255
 b0e:	2b 96       	adiw	r28, 0x0b	; 11
 b10:	e2 e1       	ldi	r30, 0x12	; 18
 b12:	0c 94 57 06 	jmp	0xcae	; 0xcae <__epilogue_restores__>

00000b16 <strnlen_P>:
 b16:	fc 01       	movw	r30, r24
 b18:	05 90       	lpm	r0, Z+
 b1a:	61 50       	subi	r22, 0x01	; 1
 b1c:	70 40       	sbci	r23, 0x00	; 0
 b1e:	01 10       	cpse	r0, r1
 b20:	d8 f7       	brcc	.-10     	; 0xb18 <strnlen_P+0x2>
 b22:	80 95       	com	r24
 b24:	90 95       	com	r25
 b26:	8e 0f       	add	r24, r30
 b28:	9f 1f       	adc	r25, r31
 b2a:	08 95       	ret

00000b2c <strnlen>:
 b2c:	fc 01       	movw	r30, r24
 b2e:	61 50       	subi	r22, 0x01	; 1
 b30:	70 40       	sbci	r23, 0x00	; 0
 b32:	01 90       	ld	r0, Z+
 b34:	01 10       	cpse	r0, r1
 b36:	d8 f7       	brcc	.-10     	; 0xb2e <strnlen+0x2>
 b38:	80 95       	com	r24
 b3a:	90 95       	com	r25
 b3c:	8e 0f       	add	r24, r30
 b3e:	9f 1f       	adc	r25, r31
 b40:	08 95       	ret

00000b42 <fputc>:
 b42:	0f 93       	push	r16
 b44:	1f 93       	push	r17
 b46:	cf 93       	push	r28
 b48:	df 93       	push	r29
 b4a:	fb 01       	movw	r30, r22
 b4c:	23 81       	ldd	r18, Z+3	; 0x03
 b4e:	21 fd       	sbrc	r18, 1
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <fputc+0x16>
 b52:	8f ef       	ldi	r24, 0xFF	; 255
 b54:	9f ef       	ldi	r25, 0xFF	; 255
 b56:	2c c0       	rjmp	.+88     	; 0xbb0 <fputc+0x6e>
 b58:	22 ff       	sbrs	r18, 2
 b5a:	16 c0       	rjmp	.+44     	; 0xb88 <fputc+0x46>
 b5c:	46 81       	ldd	r20, Z+6	; 0x06
 b5e:	57 81       	ldd	r21, Z+7	; 0x07
 b60:	24 81       	ldd	r18, Z+4	; 0x04
 b62:	35 81       	ldd	r19, Z+5	; 0x05
 b64:	42 17       	cp	r20, r18
 b66:	53 07       	cpc	r21, r19
 b68:	44 f4       	brge	.+16     	; 0xb7a <fputc+0x38>
 b6a:	a0 81       	ld	r26, Z
 b6c:	b1 81       	ldd	r27, Z+1	; 0x01
 b6e:	9d 01       	movw	r18, r26
 b70:	2f 5f       	subi	r18, 0xFF	; 255
 b72:	3f 4f       	sbci	r19, 0xFF	; 255
 b74:	31 83       	std	Z+1, r19	; 0x01
 b76:	20 83       	st	Z, r18
 b78:	8c 93       	st	X, r24
 b7a:	26 81       	ldd	r18, Z+6	; 0x06
 b7c:	37 81       	ldd	r19, Z+7	; 0x07
 b7e:	2f 5f       	subi	r18, 0xFF	; 255
 b80:	3f 4f       	sbci	r19, 0xFF	; 255
 b82:	37 83       	std	Z+7, r19	; 0x07
 b84:	26 83       	std	Z+6, r18	; 0x06
 b86:	14 c0       	rjmp	.+40     	; 0xbb0 <fputc+0x6e>
 b88:	8b 01       	movw	r16, r22
 b8a:	ec 01       	movw	r28, r24
 b8c:	fb 01       	movw	r30, r22
 b8e:	00 84       	ldd	r0, Z+8	; 0x08
 b90:	f1 85       	ldd	r31, Z+9	; 0x09
 b92:	e0 2d       	mov	r30, r0
 b94:	09 95       	icall
 b96:	89 2b       	or	r24, r25
 b98:	e1 f6       	brne	.-72     	; 0xb52 <fputc+0x10>
 b9a:	d8 01       	movw	r26, r16
 b9c:	16 96       	adiw	r26, 0x06	; 6
 b9e:	8d 91       	ld	r24, X+
 ba0:	9c 91       	ld	r25, X
 ba2:	17 97       	sbiw	r26, 0x07	; 7
 ba4:	01 96       	adiw	r24, 0x01	; 1
 ba6:	17 96       	adiw	r26, 0x07	; 7
 ba8:	9c 93       	st	X, r25
 baa:	8e 93       	st	-X, r24
 bac:	16 97       	sbiw	r26, 0x06	; 6
 bae:	ce 01       	movw	r24, r28
 bb0:	df 91       	pop	r29
 bb2:	cf 91       	pop	r28
 bb4:	1f 91       	pop	r17
 bb6:	0f 91       	pop	r16
 bb8:	08 95       	ret

00000bba <__ultoa_invert>:
 bba:	fa 01       	movw	r30, r20
 bbc:	aa 27       	eor	r26, r26
 bbe:	28 30       	cpi	r18, 0x08	; 8
 bc0:	51 f1       	breq	.+84     	; 0xc16 <__ultoa_invert+0x5c>
 bc2:	20 31       	cpi	r18, 0x10	; 16
 bc4:	81 f1       	breq	.+96     	; 0xc26 <__ultoa_invert+0x6c>
 bc6:	e8 94       	clt
 bc8:	6f 93       	push	r22
 bca:	6e 7f       	andi	r22, 0xFE	; 254
 bcc:	6e 5f       	subi	r22, 0xFE	; 254
 bce:	7f 4f       	sbci	r23, 0xFF	; 255
 bd0:	8f 4f       	sbci	r24, 0xFF	; 255
 bd2:	9f 4f       	sbci	r25, 0xFF	; 255
 bd4:	af 4f       	sbci	r26, 0xFF	; 255
 bd6:	b1 e0       	ldi	r27, 0x01	; 1
 bd8:	3e d0       	rcall	.+124    	; 0xc56 <__ultoa_invert+0x9c>
 bda:	b4 e0       	ldi	r27, 0x04	; 4
 bdc:	3c d0       	rcall	.+120    	; 0xc56 <__ultoa_invert+0x9c>
 bde:	67 0f       	add	r22, r23
 be0:	78 1f       	adc	r23, r24
 be2:	89 1f       	adc	r24, r25
 be4:	9a 1f       	adc	r25, r26
 be6:	a1 1d       	adc	r26, r1
 be8:	68 0f       	add	r22, r24
 bea:	79 1f       	adc	r23, r25
 bec:	8a 1f       	adc	r24, r26
 bee:	91 1d       	adc	r25, r1
 bf0:	a1 1d       	adc	r26, r1
 bf2:	6a 0f       	add	r22, r26
 bf4:	71 1d       	adc	r23, r1
 bf6:	81 1d       	adc	r24, r1
 bf8:	91 1d       	adc	r25, r1
 bfa:	a1 1d       	adc	r26, r1
 bfc:	20 d0       	rcall	.+64     	; 0xc3e <__ultoa_invert+0x84>
 bfe:	09 f4       	brne	.+2      	; 0xc02 <__ultoa_invert+0x48>
 c00:	68 94       	set
 c02:	3f 91       	pop	r19
 c04:	2a e0       	ldi	r18, 0x0A	; 10
 c06:	26 9f       	mul	r18, r22
 c08:	11 24       	eor	r1, r1
 c0a:	30 19       	sub	r19, r0
 c0c:	30 5d       	subi	r19, 0xD0	; 208
 c0e:	31 93       	st	Z+, r19
 c10:	de f6       	brtc	.-74     	; 0xbc8 <__ultoa_invert+0xe>
 c12:	cf 01       	movw	r24, r30
 c14:	08 95       	ret
 c16:	46 2f       	mov	r20, r22
 c18:	47 70       	andi	r20, 0x07	; 7
 c1a:	40 5d       	subi	r20, 0xD0	; 208
 c1c:	41 93       	st	Z+, r20
 c1e:	b3 e0       	ldi	r27, 0x03	; 3
 c20:	0f d0       	rcall	.+30     	; 0xc40 <__ultoa_invert+0x86>
 c22:	c9 f7       	brne	.-14     	; 0xc16 <__ultoa_invert+0x5c>
 c24:	f6 cf       	rjmp	.-20     	; 0xc12 <__ultoa_invert+0x58>
 c26:	46 2f       	mov	r20, r22
 c28:	4f 70       	andi	r20, 0x0F	; 15
 c2a:	40 5d       	subi	r20, 0xD0	; 208
 c2c:	4a 33       	cpi	r20, 0x3A	; 58
 c2e:	18 f0       	brcs	.+6      	; 0xc36 <__ultoa_invert+0x7c>
 c30:	49 5d       	subi	r20, 0xD9	; 217
 c32:	31 fd       	sbrc	r19, 1
 c34:	40 52       	subi	r20, 0x20	; 32
 c36:	41 93       	st	Z+, r20
 c38:	02 d0       	rcall	.+4      	; 0xc3e <__ultoa_invert+0x84>
 c3a:	a9 f7       	brne	.-22     	; 0xc26 <__ultoa_invert+0x6c>
 c3c:	ea cf       	rjmp	.-44     	; 0xc12 <__ultoa_invert+0x58>
 c3e:	b4 e0       	ldi	r27, 0x04	; 4
 c40:	a6 95       	lsr	r26
 c42:	97 95       	ror	r25
 c44:	87 95       	ror	r24
 c46:	77 95       	ror	r23
 c48:	67 95       	ror	r22
 c4a:	ba 95       	dec	r27
 c4c:	c9 f7       	brne	.-14     	; 0xc40 <__ultoa_invert+0x86>
 c4e:	00 97       	sbiw	r24, 0x00	; 0
 c50:	61 05       	cpc	r22, r1
 c52:	71 05       	cpc	r23, r1
 c54:	08 95       	ret
 c56:	9b 01       	movw	r18, r22
 c58:	ac 01       	movw	r20, r24
 c5a:	0a 2e       	mov	r0, r26
 c5c:	06 94       	lsr	r0
 c5e:	57 95       	ror	r21
 c60:	47 95       	ror	r20
 c62:	37 95       	ror	r19
 c64:	27 95       	ror	r18
 c66:	ba 95       	dec	r27
 c68:	c9 f7       	brne	.-14     	; 0xc5c <__ultoa_invert+0xa2>
 c6a:	62 0f       	add	r22, r18
 c6c:	73 1f       	adc	r23, r19
 c6e:	84 1f       	adc	r24, r20
 c70:	95 1f       	adc	r25, r21
 c72:	a0 1d       	adc	r26, r0
 c74:	08 95       	ret

00000c76 <__prologue_saves__>:
 c76:	2f 92       	push	r2
 c78:	3f 92       	push	r3
 c7a:	4f 92       	push	r4
 c7c:	5f 92       	push	r5
 c7e:	6f 92       	push	r6
 c80:	7f 92       	push	r7
 c82:	8f 92       	push	r8
 c84:	9f 92       	push	r9
 c86:	af 92       	push	r10
 c88:	bf 92       	push	r11
 c8a:	cf 92       	push	r12
 c8c:	df 92       	push	r13
 c8e:	ef 92       	push	r14
 c90:	ff 92       	push	r15
 c92:	0f 93       	push	r16
 c94:	1f 93       	push	r17
 c96:	cf 93       	push	r28
 c98:	df 93       	push	r29
 c9a:	cd b7       	in	r28, 0x3d	; 61
 c9c:	de b7       	in	r29, 0x3e	; 62
 c9e:	ca 1b       	sub	r28, r26
 ca0:	db 0b       	sbc	r29, r27
 ca2:	0f b6       	in	r0, 0x3f	; 63
 ca4:	f8 94       	cli
 ca6:	de bf       	out	0x3e, r29	; 62
 ca8:	0f be       	out	0x3f, r0	; 63
 caa:	cd bf       	out	0x3d, r28	; 61
 cac:	09 94       	ijmp

00000cae <__epilogue_restores__>:
 cae:	2a 88       	ldd	r2, Y+18	; 0x12
 cb0:	39 88       	ldd	r3, Y+17	; 0x11
 cb2:	48 88       	ldd	r4, Y+16	; 0x10
 cb4:	5f 84       	ldd	r5, Y+15	; 0x0f
 cb6:	6e 84       	ldd	r6, Y+14	; 0x0e
 cb8:	7d 84       	ldd	r7, Y+13	; 0x0d
 cba:	8c 84       	ldd	r8, Y+12	; 0x0c
 cbc:	9b 84       	ldd	r9, Y+11	; 0x0b
 cbe:	aa 84       	ldd	r10, Y+10	; 0x0a
 cc0:	b9 84       	ldd	r11, Y+9	; 0x09
 cc2:	c8 84       	ldd	r12, Y+8	; 0x08
 cc4:	df 80       	ldd	r13, Y+7	; 0x07
 cc6:	ee 80       	ldd	r14, Y+6	; 0x06
 cc8:	fd 80       	ldd	r15, Y+5	; 0x05
 cca:	0c 81       	ldd	r16, Y+4	; 0x04
 ccc:	1b 81       	ldd	r17, Y+3	; 0x03
 cce:	aa 81       	ldd	r26, Y+2	; 0x02
 cd0:	b9 81       	ldd	r27, Y+1	; 0x01
 cd2:	ce 0f       	add	r28, r30
 cd4:	d1 1d       	adc	r29, r1
 cd6:	0f b6       	in	r0, 0x3f	; 63
 cd8:	f8 94       	cli
 cda:	de bf       	out	0x3e, r29	; 62
 cdc:	0f be       	out	0x3f, r0	; 63
 cde:	cd bf       	out	0x3d, r28	; 61
 ce0:	ed 01       	movw	r28, r26
 ce2:	08 95       	ret

00000ce4 <_exit>:
 ce4:	f8 94       	cli

00000ce6 <__stop_program>:
 ce6:	ff cf       	rjmp	.-2      	; 0xce6 <__stop_program>
