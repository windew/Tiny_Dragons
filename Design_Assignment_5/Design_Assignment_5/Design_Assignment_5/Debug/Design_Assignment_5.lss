
Design_Assignment_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000176  00800100  00000f42  00000fd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800276  00800276  0000114c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000114c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001deb  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee0  00000000  00000000  000030db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bac  00000000  00000000  00003fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  00004b68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000735  00000000  00000000  00004dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000904  00000000  00000000  0000550d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005e11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_1>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	12 e0       	ldi	r17, 0x02	; 2
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 e4       	ldi	r30, 0x42	; 66
  c8:	ff e0       	ldi	r31, 0x0F	; 15
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a6 37       	cpi	r26, 0x76	; 118
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	22 e0       	ldi	r18, 0x02	; 2
  d8:	a6 e7       	ldi	r26, 0x76	; 118
  da:	b2 e0       	ldi	r27, 0x02	; 2
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 3a       	cpi	r26, 0xAA	; 170
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 2a 01 	call	0x254	; 0x254 <main>
  ea:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <__vector_1>:
	}
}

//	Interrupt on IRQ pin
ISR(INT0_vect)
{
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	8f 93       	push	r24
	message_received = true;
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <message_received>
}
 104:	8f 91       	pop	r24
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	1f 90       	pop	r1
 10e:	18 95       	reti

00000110 <print_config>:


void print_config(void)
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	1f 92       	push	r1
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
 11a:	86 e2       	ldi	r24, 0x26	; 38
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	0e 94 97 04 	call	0x92e	; 0x92e <puts>
	printf("-------------------------------------------\n");
 122:	84 e5       	ldi	r24, 0x54	; 84
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	0e 94 97 04 	call	0x92e	; 0x92e <puts>
	nrf24_read(CONFIG,&data,1);
 12a:	41 e0       	ldi	r20, 0x01	; 1
 12c:	50 e0       	ldi	r21, 0x00	; 0
 12e:	be 01       	movw	r22, r28
 130:	6f 5f       	subi	r22, 0xFF	; 255
 132:	7f 4f       	sbci	r23, 0xFF	; 255
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("CONFIG		0x%x\n",data);
 13a:	89 81       	ldd	r24, Y+1	; 0x01
 13c:	1f 92       	push	r1
 13e:	8f 93       	push	r24
 140:	80 e8       	ldi	r24, 0x80	; 128
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	9f 93       	push	r25
 146:	8f 93       	push	r24
 148:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(EN_AA,&data,1);
 14c:	41 e0       	ldi	r20, 0x01	; 1
 14e:	50 e0       	ldi	r21, 0x00	; 0
 150:	be 01       	movw	r22, r28
 152:	6f 5f       	subi	r22, 0xFF	; 255
 154:	7f 4f       	sbci	r23, 0xFF	; 255
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("EN_AA			0x%x\n",data);
 15c:	89 81       	ldd	r24, Y+1	; 0x01
 15e:	1f 92       	push	r1
 160:	8f 93       	push	r24
 162:	8e e8       	ldi	r24, 0x8E	; 142
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	9f 93       	push	r25
 168:	8f 93       	push	r24
 16a:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(EN_RXADDR,&data,1);
 16e:	41 e0       	ldi	r20, 0x01	; 1
 170:	50 e0       	ldi	r21, 0x00	; 0
 172:	be 01       	movw	r22, r28
 174:	6f 5f       	subi	r22, 0xFF	; 255
 176:	7f 4f       	sbci	r23, 0xFF	; 255
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
 17e:	89 81       	ldd	r24, Y+1	; 0x01
 180:	1f 92       	push	r1
 182:	8f 93       	push	r24
 184:	8c e9       	ldi	r24, 0x9C	; 156
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	9f 93       	push	r25
 18a:	8f 93       	push	r24
 18c:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(SETUP_RETR,&data,1);
 190:	41 e0       	ldi	r20, 0x01	; 1
 192:	50 e0       	ldi	r21, 0x00	; 0
 194:	be 01       	movw	r22, r28
 196:	6f 5f       	subi	r22, 0xFF	; 255
 198:	7f 4f       	sbci	r23, 0xFF	; 255
 19a:	84 e0       	ldi	r24, 0x04	; 4
 19c:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
 1a0:	89 81       	ldd	r24, Y+1	; 0x01
 1a2:	1f 92       	push	r1
 1a4:	8f 93       	push	r24
 1a6:	8d ea       	ldi	r24, 0xAD	; 173
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(RF_CH,&data,1);
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	50 e0       	ldi	r21, 0x00	; 0
 1b6:	be 01       	movw	r22, r28
 1b8:	6f 5f       	subi	r22, 0xFF	; 255
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	85 e0       	ldi	r24, 0x05	; 5
 1be:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("RF_CH			0x%x\n",data);
 1c2:	89 81       	ldd	r24, Y+1	; 0x01
 1c4:	1f 92       	push	r1
 1c6:	8f 93       	push	r24
 1c8:	8f eb       	ldi	r24, 0xBF	; 191
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	9f 93       	push	r25
 1ce:	8f 93       	push	r24
 1d0:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(RF_SETUP,&data,1);
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	be 01       	movw	r22, r28
 1da:	6f 5f       	subi	r22, 0xFF	; 255
 1dc:	7f 4f       	sbci	r23, 0xFF	; 255
 1de:	86 e0       	ldi	r24, 0x06	; 6
 1e0:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
 1e4:	89 81       	ldd	r24, Y+1	; 0x01
 1e6:	1f 92       	push	r1
 1e8:	8f 93       	push	r24
 1ea:	8d ec       	ldi	r24, 0xCD	; 205
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(STATUS,&data,1);
 1f6:	41 e0       	ldi	r20, 0x01	; 1
 1f8:	50 e0       	ldi	r21, 0x00	; 0
 1fa:	be 01       	movw	r22, r28
 1fc:	6f 5f       	subi	r22, 0xFF	; 255
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	87 e0       	ldi	r24, 0x07	; 7
 202:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("STATUS		0x%x\n",data);
 206:	89 81       	ldd	r24, Y+1	; 0x01
 208:	1f 92       	push	r1
 20a:	8f 93       	push	r24
 20c:	8d ed       	ldi	r24, 0xDD	; 221
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	9f 93       	push	r25
 212:	8f 93       	push	r24
 214:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	nrf24_read(FEATURE,&data,1);
 218:	41 e0       	ldi	r20, 0x01	; 1
 21a:	50 e0       	ldi	r21, 0x00	; 0
 21c:	be 01       	movw	r22, r28
 21e:	6f 5f       	subi	r22, 0xFF	; 255
 220:	7f 4f       	sbci	r23, 0xFF	; 255
 222:	8d e1       	ldi	r24, 0x1D	; 29
 224:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	printf("FEATURE		0x%x\n",data);
 228:	89 81       	ldd	r24, Y+1	; 0x01
 22a:	1f 92       	push	r1
 22c:	8f 93       	push	r24
 22e:	8b ee       	ldi	r24, 0xEB	; 235
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	9f 93       	push	r25
 234:	8f 93       	push	r24
 236:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	printf("-------------------------------------------\n\n");
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
 244:	8a ef       	ldi	r24, 0xFA	; 250
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	0e 94 97 04 	call	0x92e	; 0x92e <puts>
}
 24c:	0f 90       	pop	r0
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	08 95       	ret

00000254 <main>:
volatile unsigned char temp[10];



int main(void)
{
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	aa 97       	sbiw	r28, 0x2a	; 42
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
	// Set up ADC
	ADMUX |= (1 << REFS0); // use AVcc
 268:	ec e7       	ldi	r30, 0x7C	; 124
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	80 64       	ori	r24, 0x40	; 64
 270:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR); // Right adjust
 272:	80 81       	ld	r24, Z
 274:	80 62       	ori	r24, 0x20	; 32
 276:	80 83       	st	Z, r24
	ADCSRA = (1 << ADEN)	// Enable
 278:	83 ee       	ldi	r24, 0xE3	; 227
 27a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	char tx_message[32];				// Define string array
	unsigned char i;
	char dummy[10];
	
	//	Initialize UART
	uart_init();
 27e:	0e 94 37 04 	call	0x86e	; 0x86e <uart_init>
	
	//	Initialize nRF24L01+ and print configuration info
	nrf24_init();
 282:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <nrf24_init>
	print_config();
 286:	0e 94 88 00 	call	0x110	; 0x110 <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
 28a:	0e 94 07 03 	call	0x60e	; 0x60e <nrf24_start_listening>

	strcpy(tx_message,"GOOD");	// Copy string into array
 28e:	85 e0       	ldi	r24, 0x05	; 5
 290:	e7 e2       	ldi	r30, 0x27	; 39
 292:	f2 e0       	ldi	r31, 0x02	; 2
 294:	de 01       	movw	r26, r28
 296:	11 96       	adiw	r26, 0x01	; 1
 298:	01 90       	ld	r0, Z+
 29a:	0d 92       	st	X+, r0
 29c:	8a 95       	dec	r24
 29e:	e1 f7       	brne	.-8      	; 0x298 <main+0x44>
	nrf24_send_message(tx_message);
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	0e 94 12 03 	call	0x624	; 0x624 <nrf24_send_message>
	while (1)
	{
		ADCdata = (ADCH << 1) * 2 + 32; // Convert Celsius to Fahrenheit
 2a8:	0f 2e       	mov	r0, r31
 2aa:	f9 e7       	ldi	r31, 0x79	; 121
 2ac:	cf 2e       	mov	r12, r31
 2ae:	d1 2c       	mov	r13, r1
 2b0:	f0 2d       	mov	r31, r0
 2b2:	7e 01       	movw	r14, r28
 2b4:	2b e2       	ldi	r18, 0x2B	; 43
 2b6:	e2 0e       	add	r14, r18
 2b8:	f1 1c       	adc	r15, r1
		itoa(ADCdata, dummy, 10); //convert char to ascii
 2ba:	8e 01       	movw	r16, r28
 2bc:	0f 5d       	subi	r16, 0xDF	; 223
 2be:	1f 4f       	sbci	r17, 0xFF	; 255
		
		if (message_received)
		{
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
 2c0:	0f 2e       	mov	r0, r31
 2c2:	fc e2       	ldi	r31, 0x2C	; 44
 2c4:	af 2e       	mov	r10, r31
 2c6:	f2 e0       	ldi	r31, 0x02	; 2
 2c8:	bf 2e       	mov	r11, r31
 2ca:	f0 2d       	mov	r31, r0
	strcpy(tx_message,"GOOD");	// Copy string into array
	nrf24_send_message(tx_message);
	while (1)
	{
		ADCdata = (ADCH << 1) * 2 + 32; // Convert Celsius to Fahrenheit
		itoa(ADCdata, dummy, 10); //convert char to ascii
 2cc:	80 2e       	mov	r8, r16
 2ce:	91 2e       	mov	r9, r17
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(temp);
 2d0:	77 24       	eor	r7, r7
 2d2:	73 94       	inc	r7

	strcpy(tx_message,"GOOD");	// Copy string into array
	nrf24_send_message(tx_message);
	while (1)
	{
		ADCdata = (ADCH << 1) * 2 + 32; // Convert Celsius to Fahrenheit
 2d4:	f6 01       	movw	r30, r12
 2d6:	80 81       	ld	r24, Z
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	40 96       	adiw	r24, 0x10	; 16
 2e0:	88 0f       	add	r24, r24
 2e2:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <ADCdata>
		itoa(ADCdata, dummy, 10); //convert char to ascii
 2e6:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <ADCdata>
 2ea:	4a e0       	ldi	r20, 0x0A	; 10
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	68 2d       	mov	r22, r8
 2f0:	79 2d       	mov	r23, r9
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 51 04 	call	0x8a2	; 0x8a2 <itoa>
 2f8:	fe 01       	movw	r30, r28
 2fa:	b1 96       	adiw	r30, 0x21	; 33
 2fc:	df 01       	movw	r26, r30
 2fe:	a0 1b       	sub	r26, r16
 300:	b1 0b       	sbc	r27, r17
		for(i = 0 ; i < 10 ; i++)
		{
			temp[i] = dummy[i]; //move converted ascii
 302:	81 91       	ld	r24, Z+
 304:	a7 56       	subi	r26, 0x67	; 103
 306:	bd 4f       	sbci	r27, 0xFD	; 253
 308:	8c 93       	st	X, r24
	nrf24_send_message(tx_message);
	while (1)
	{
		ADCdata = (ADCH << 1) * 2 + 32; // Convert Celsius to Fahrenheit
		itoa(ADCdata, dummy, 10); //convert char to ascii
		for(i = 0 ; i < 10 ; i++)
 30a:	ee 15       	cp	r30, r14
 30c:	ff 05       	cpc	r31, r15
 30e:	b1 f7       	brne	.-20     	; 0x2fc <main+0xa8>
		
		//strcpy(tx_message,"Waiting");	// Copy string into array
		//nrf24_send_message(tx_message);
		//_delay_ms(50);
		
		if (message_received)
 310:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <message_received>
 314:	88 23       	and	r24, r24
 316:	f1 f2       	breq	.-68     	; 0x2d4 <main+0x80>
		{
			//	Message received, print it
			message_received = false;
 318:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <message_received>
			printf("Received message: %s\n",nrf24_read_message());
 31c:	0e 94 cf 03 	call	0x79e	; 0x79e <nrf24_read_message>
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	bf 92       	push	r11
 326:	af 92       	push	r10
 328:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32c:	ff ef       	ldi	r31, 0xFF	; 255
 32e:	29 e6       	ldi	r18, 0x69	; 105
 330:	88 e1       	ldi	r24, 0x18	; 24
 332:	f1 50       	subi	r31, 0x01	; 1
 334:	20 40       	sbci	r18, 0x00	; 0
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0xde>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0xe8>
 33c:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(temp);
 33e:	89 e9       	ldi	r24, 0x99	; 153
 340:	92 e0       	ldi	r25, 0x02	; 2
 342:	0e 94 12 03 	call	0x624	; 0x624 <nrf24_send_message>
 346:	97 2d       	mov	r25, r7
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	81 11       	cpse	r24, r1
 352:	01 c0       	rjmp	.+2      	; 0x356 <main+0x102>
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <__data_end>
			if (status == true) printf("Message sent successfully\n");
 35a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <__data_end>
 35e:	88 23       	and	r24, r24
 360:	09 f4       	brne	.+2      	; 0x364 <main+0x110>
 362:	b8 cf       	rjmp	.-144    	; 0x2d4 <main+0x80>
 364:	82 e4       	ldi	r24, 0x42	; 66
 366:	92 e0       	ldi	r25, 0x02	; 2
 368:	0e 94 97 04 	call	0x92e	; 0x92e <puts>
 36c:	b3 cf       	rjmp	.-154    	; 0x2d4 <main+0x80>

0000036e <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
 36e:	df 92       	push	r13
 370:	ef 92       	push	r14
 372:	ff 92       	push	r15
 374:	0f 93       	push	r16
 376:	1f 93       	push	r17
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	7b 01       	movw	r14, r22
 37e:	8a 01       	movw	r16, r20
 380:	2a 98       	cbi	0x05, 2	; 5
 382:	0e 94 16 04 	call	0x82c	; 0x82c <spi_exchange>
 386:	d8 2e       	mov	r13, r24
 388:	01 15       	cp	r16, r1
 38a:	11 05       	cpc	r17, r1
 38c:	51 f0       	breq	.+20     	; 0x3a2 <nrf24_send_spi+0x34>
 38e:	e7 01       	movw	r28, r14
 390:	0e 0d       	add	r16, r14
 392:	1f 1d       	adc	r17, r15
 394:	88 81       	ld	r24, Y
 396:	0e 94 16 04 	call	0x82c	; 0x82c <spi_exchange>
 39a:	89 93       	st	Y+, r24
 39c:	c0 17       	cp	r28, r16
 39e:	d1 07       	cpc	r29, r17
 3a0:	c9 f7       	brne	.-14     	; 0x394 <nrf24_send_spi+0x26>
 3a2:	2a 9a       	sbi	0x05, 2	; 5
 3a4:	8d 2d       	mov	r24, r13
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	ff 90       	pop	r15
 3b0:	ef 90       	pop	r14
 3b2:	df 90       	pop	r13
 3b4:	08 95       	ret

000003b6 <nrf24_write>:
 3b6:	80 62       	ori	r24, 0x20	; 32
 3b8:	0e 94 b7 01 	call	0x36e	; 0x36e <nrf24_send_spi>
 3bc:	08 95       	ret

000003be <nrf24_read>:
 3be:	0e 94 b7 01 	call	0x36e	; 0x36e <nrf24_send_spi>
 3c2:	08 95       	ret

000003c4 <nrf24_init>:
 3c4:	0f 93       	push	r16
 3c6:	1f 93       	push	r17
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	1f 92       	push	r1
 3ce:	cd b7       	in	r28, 0x3d	; 61
 3d0:	de b7       	in	r29, 0x3e	; 62
 3d2:	f8 94       	cli
 3d4:	e9 e6       	ldi	r30, 0x69	; 105
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	80 81       	ld	r24, Z
 3da:	82 60       	ori	r24, 0x02	; 2
 3dc:	80 83       	st	Z, r24
 3de:	e8 9a       	sbi	0x1d, 0	; 29
 3e0:	78 94       	sei
 3e2:	21 9a       	sbi	0x04, 1	; 4
 3e4:	22 9a       	sbi	0x04, 2	; 4
 3e6:	2a 9a       	sbi	0x05, 2	; 5
 3e8:	29 98       	cbi	0x05, 1	; 5
 3ea:	0e 94 07 04 	call	0x80e	; 0x80e <spi_master_init>
 3ee:	2f ef       	ldi	r18, 0xFF	; 255
 3f0:	81 ee       	ldi	r24, 0xE1	; 225
 3f2:	94 e0       	ldi	r25, 0x04	; 4
 3f4:	21 50       	subi	r18, 0x01	; 1
 3f6:	80 40       	sbci	r24, 0x00	; 0
 3f8:	90 40       	sbci	r25, 0x00	; 0
 3fa:	e1 f7       	brne	.-8      	; 0x3f4 <nrf24_init+0x30>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <nrf24_init+0x3a>
 3fe:	00 00       	nop
 400:	0f e3       	ldi	r16, 0x3F	; 63
 402:	00 93 a3 02 	sts	0x02A3, r16	; 0x8002a3 <data>
 406:	41 e0       	ldi	r20, 0x01	; 1
 408:	50 e0       	ldi	r21, 0x00	; 0
 40a:	63 ea       	ldi	r22, 0xA3	; 163
 40c:	72 e0       	ldi	r23, 0x02	; 2
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 414:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <data>
 418:	41 e0       	ldi	r20, 0x01	; 1
 41a:	50 e0       	ldi	r21, 0x00	; 0
 41c:	63 ea       	ldi	r22, 0xA3	; 163
 41e:	72 e0       	ldi	r23, 0x02	; 2
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 426:	80 ef       	ldi	r24, 0xF0	; 240
 428:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 42c:	41 e0       	ldi	r20, 0x01	; 1
 42e:	50 e0       	ldi	r21, 0x00	; 0
 430:	63 ea       	ldi	r22, 0xA3	; 163
 432:	72 e0       	ldi	r23, 0x02	; 2
 434:	84 e0       	ldi	r24, 0x04	; 4
 436:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 43a:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <data>
 43e:	41 e0       	ldi	r20, 0x01	; 1
 440:	50 e0       	ldi	r21, 0x00	; 0
 442:	63 ea       	ldi	r22, 0xA3	; 163
 444:	72 e0       	ldi	r23, 0x02	; 2
 446:	82 e0       	ldi	r24, 0x02	; 2
 448:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 44c:	84 e7       	ldi	r24, 0x74	; 116
 44e:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 452:	41 e0       	ldi	r20, 0x01	; 1
 454:	50 e0       	ldi	r21, 0x00	; 0
 456:	63 ea       	ldi	r22, 0xA3	; 163
 458:	72 e0       	ldi	r23, 0x02	; 2
 45a:	85 e0       	ldi	r24, 0x05	; 5
 45c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 460:	8e e0       	ldi	r24, 0x0E	; 14
 462:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 466:	41 e0       	ldi	r20, 0x01	; 1
 468:	50 e0       	ldi	r21, 0x00	; 0
 46a:	63 ea       	ldi	r22, 0xA3	; 163
 46c:	72 e0       	ldi	r23, 0x02	; 2
 46e:	86 e0       	ldi	r24, 0x06	; 6
 470:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 474:	10 e7       	ldi	r17, 0x70	; 112
 476:	10 93 a3 02 	sts	0x02A3, r17	; 0x8002a3 <data>
 47a:	41 e0       	ldi	r20, 0x01	; 1
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	63 ea       	ldi	r22, 0xA3	; 163
 480:	72 e0       	ldi	r23, 0x02	; 2
 482:	87 e0       	ldi	r24, 0x07	; 7
 484:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 488:	00 93 a3 02 	sts	0x02A3, r16	; 0x8002a3 <data>
 48c:	41 e0       	ldi	r20, 0x01	; 1
 48e:	50 e0       	ldi	r21, 0x00	; 0
 490:	63 ea       	ldi	r22, 0xA3	; 163
 492:	72 e0       	ldi	r23, 0x02	; 2
 494:	8c e1       	ldi	r24, 0x1C	; 28
 496:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 49a:	84 e0       	ldi	r24, 0x04	; 4
 49c:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 4a0:	41 e0       	ldi	r20, 0x01	; 1
 4a2:	50 e0       	ldi	r21, 0x00	; 0
 4a4:	63 ea       	ldi	r22, 0xA3	; 163
 4a6:	72 e0       	ldi	r23, 0x02	; 2
 4a8:	8d e1       	ldi	r24, 0x1D	; 29
 4aa:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4ae:	19 83       	std	Y+1, r17	; 0x01
 4b0:	40 e0       	ldi	r20, 0x00	; 0
 4b2:	50 e0       	ldi	r21, 0x00	; 0
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	70 e0       	ldi	r23, 0x00	; 0
 4b8:	82 ee       	ldi	r24, 0xE2	; 226
 4ba:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4be:	40 e0       	ldi	r20, 0x00	; 0
 4c0:	50 e0       	ldi	r21, 0x00	; 0
 4c2:	60 e0       	ldi	r22, 0x00	; 0
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	81 ee       	ldi	r24, 0xE1	; 225
 4c8:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4cc:	45 e0       	ldi	r20, 0x05	; 5
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	60 e0       	ldi	r22, 0x00	; 0
 4d2:	71 e0       	ldi	r23, 0x01	; 1
 4d4:	8a e0       	ldi	r24, 0x0A	; 10
 4d6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4da:	45 e0       	ldi	r20, 0x05	; 5
 4dc:	50 e0       	ldi	r21, 0x00	; 0
 4de:	65 e0       	ldi	r22, 0x05	; 5
 4e0:	71 e0       	ldi	r23, 0x01	; 1
 4e2:	80 e1       	ldi	r24, 0x10	; 16
 4e4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4e8:	41 e0       	ldi	r20, 0x01	; 1
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	be 01       	movw	r22, r28
 4ee:	6f 5f       	subi	r22, 0xFF	; 255
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	82 e0       	ldi	r24, 0x02	; 2
 4f4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 4f8:	89 81       	ldd	r24, Y+1	; 0x01
 4fa:	81 60       	ori	r24, 0x01	; 1
 4fc:	89 83       	std	Y+1, r24	; 0x01
 4fe:	41 e0       	ldi	r20, 0x01	; 1
 500:	50 e0       	ldi	r21, 0x00	; 0
 502:	be 01       	movw	r22, r28
 504:	6f 5f       	subi	r22, 0xFF	; 255
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	82 e0       	ldi	r24, 0x02	; 2
 50a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 50e:	0f 90       	pop	r0
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	1f 91       	pop	r17
 516:	0f 91       	pop	r16
 518:	08 95       	ret

0000051a <nrf24_state>:
 51a:	1f 93       	push	r17
 51c:	cf 93       	push	r28
 51e:	df 93       	push	r29
 520:	1f 92       	push	r1
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	18 2f       	mov	r17, r24
 528:	41 e0       	ldi	r20, 0x01	; 1
 52a:	50 e0       	ldi	r21, 0x00	; 0
 52c:	be 01       	movw	r22, r28
 52e:	6f 5f       	subi	r22, 0xFF	; 255
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
 538:	13 30       	cpi	r17, 0x03	; 3
 53a:	71 f1       	breq	.+92     	; 0x598 <nrf24_state+0x7e>
 53c:	28 f4       	brcc	.+10     	; 0x548 <nrf24_state+0x2e>
 53e:	11 30       	cpi	r17, 0x01	; 1
 540:	59 f0       	breq	.+22     	; 0x558 <nrf24_state+0x3e>
 542:	12 30       	cpi	r17, 0x02	; 2
 544:	e9 f0       	breq	.+58     	; 0x580 <nrf24_state+0x66>
 546:	5e c0       	rjmp	.+188    	; 0x604 <nrf24_state+0xea>
 548:	15 30       	cpi	r17, 0x05	; 5
 54a:	09 f4       	brne	.+2      	; 0x54e <nrf24_state+0x34>
 54c:	47 c0       	rjmp	.+142    	; 0x5dc <nrf24_state+0xc2>
 54e:	d0 f1       	brcs	.+116    	; 0x5c4 <nrf24_state+0xaa>
 550:	16 30       	cpi	r17, 0x06	; 6
 552:	09 f4       	brne	.+2      	; 0x556 <nrf24_state+0x3c>
 554:	45 c0       	rjmp	.+138    	; 0x5e0 <nrf24_state+0xc6>
 556:	56 c0       	rjmp	.+172    	; 0x604 <nrf24_state+0xea>
 558:	89 81       	ldd	r24, Y+1	; 0x01
 55a:	81 fd       	sbrc	r24, 1
 55c:	53 c0       	rjmp	.+166    	; 0x604 <nrf24_state+0xea>
 55e:	82 60       	ori	r24, 0x02	; 2
 560:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 564:	41 e0       	ldi	r20, 0x01	; 1
 566:	50 e0       	ldi	r21, 0x00	; 0
 568:	63 ea       	ldi	r22, 0xA3	; 163
 56a:	72 e0       	ldi	r23, 0x02	; 2
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 572:	8f e3       	ldi	r24, 0x3F	; 63
 574:	9f e1       	ldi	r25, 0x1F	; 31
 576:	01 97       	sbiw	r24, 0x01	; 1
 578:	f1 f7       	brne	.-4      	; 0x576 <nrf24_state+0x5c>
 57a:	00 c0       	rjmp	.+0      	; 0x57c <nrf24_state+0x62>
 57c:	00 00       	nop
 57e:	42 c0       	rjmp	.+132    	; 0x604 <nrf24_state+0xea>
 580:	89 81       	ldd	r24, Y+1	; 0x01
 582:	8d 7f       	andi	r24, 0xFD	; 253
 584:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 588:	41 e0       	ldi	r20, 0x01	; 1
 58a:	50 e0       	ldi	r21, 0x00	; 0
 58c:	63 ea       	ldi	r22, 0xA3	; 163
 58e:	72 e0       	ldi	r23, 0x02	; 2
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 596:	36 c0       	rjmp	.+108    	; 0x604 <nrf24_state+0xea>
 598:	89 81       	ldd	r24, Y+1	; 0x01
 59a:	81 60       	ori	r24, 0x01	; 1
 59c:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 5a0:	41 e0       	ldi	r20, 0x01	; 1
 5a2:	50 e0       	ldi	r21, 0x00	; 0
 5a4:	63 ea       	ldi	r22, 0xA3	; 163
 5a6:	72 e0       	ldi	r23, 0x02	; 2
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 5ae:	80 e7       	ldi	r24, 0x70	; 112
 5b0:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 5b4:	41 e0       	ldi	r20, 0x01	; 1
 5b6:	50 e0       	ldi	r21, 0x00	; 0
 5b8:	63 ea       	ldi	r22, 0xA3	; 163
 5ba:	72 e0       	ldi	r23, 0x02	; 2
 5bc:	87 e0       	ldi	r24, 0x07	; 7
 5be:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 5c2:	20 c0       	rjmp	.+64     	; 0x604 <nrf24_state+0xea>
 5c4:	89 81       	ldd	r24, Y+1	; 0x01
 5c6:	8e 7f       	andi	r24, 0xFE	; 254
 5c8:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 5cc:	41 e0       	ldi	r20, 0x01	; 1
 5ce:	50 e0       	ldi	r21, 0x00	; 0
 5d0:	63 ea       	ldi	r22, 0xA3	; 163
 5d2:	72 e0       	ldi	r23, 0x02	; 2
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 5da:	14 c0       	rjmp	.+40     	; 0x604 <nrf24_state+0xea>
 5dc:	29 98       	cbi	0x05, 1	; 5
 5de:	12 c0       	rjmp	.+36     	; 0x604 <nrf24_state+0xea>
 5e0:	89 81       	ldd	r24, Y+1	; 0x01
 5e2:	8e 7f       	andi	r24, 0xFE	; 254
 5e4:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 5e8:	41 e0       	ldi	r20, 0x01	; 1
 5ea:	50 e0       	ldi	r21, 0x00	; 0
 5ec:	63 ea       	ldi	r22, 0xA3	; 163
 5ee:	72 e0       	ldi	r23, 0x02	; 2
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 5f6:	29 9a       	sbi	0x05, 1	; 5
 5f8:	87 e5       	ldi	r24, 0x57	; 87
 5fa:	92 e0       	ldi	r25, 0x02	; 2
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	f1 f7       	brne	.-4      	; 0x5fc <nrf24_state+0xe2>
 600:	00 c0       	rjmp	.+0      	; 0x602 <nrf24_state+0xe8>
 602:	00 00       	nop
 604:	0f 90       	pop	r0
 606:	df 91       	pop	r29
 608:	cf 91       	pop	r28
 60a:	1f 91       	pop	r17
 60c:	08 95       	ret

0000060e <nrf24_start_listening>:
 60e:	83 e0       	ldi	r24, 0x03	; 3
 610:	0e 94 8d 02 	call	0x51a	; 0x51a <nrf24_state>
 614:	29 9a       	sbi	0x05, 1	; 5
 616:	87 e5       	ldi	r24, 0x57	; 87
 618:	92 e0       	ldi	r25, 0x02	; 2
 61a:	01 97       	sbiw	r24, 0x01	; 1
 61c:	f1 f7       	brne	.-4      	; 0x61a <nrf24_start_listening+0xc>
 61e:	00 c0       	rjmp	.+0      	; 0x620 <nrf24_start_listening+0x12>
 620:	00 00       	nop
 622:	08 95       	ret

00000624 <nrf24_send_message>:
 624:	cf 92       	push	r12
 626:	df 92       	push	r13
 628:	ef 92       	push	r14
 62a:	ff 92       	push	r15
 62c:	0f 93       	push	r16
 62e:	1f 93       	push	r17
 630:	cf 93       	push	r28
 632:	df 93       	push	r29
 634:	cd b7       	in	r28, 0x3d	; 61
 636:	de b7       	in	r29, 0x3e	; 62
 638:	a0 97       	sbiw	r28, 0x20	; 32
 63a:	0f b6       	in	r0, 0x3f	; 63
 63c:	f8 94       	cli
 63e:	de bf       	out	0x3e, r29	; 62
 640:	0f be       	out	0x3f, r0	; 63
 642:	cd bf       	out	0x3d, r28	; 61
 644:	6c 01       	movw	r12, r24
 646:	68 94       	set
 648:	ff 24       	eor	r15, r15
 64a:	f5 f8       	bld	r15, 5
 64c:	ce 01       	movw	r24, r28
 64e:	01 96       	adiw	r24, 0x01	; 1
 650:	fc 01       	movw	r30, r24
 652:	2f 2d       	mov	r18, r15
 654:	11 92       	st	Z+, r1
 656:	2a 95       	dec	r18
 658:	e9 f7       	brne	.-6      	; 0x654 <nrf24_send_message+0x30>
 65a:	b6 01       	movw	r22, r12
 65c:	0e 94 4a 04 	call	0x894	; 0x894 <strcpy>
 660:	f6 01       	movw	r30, r12
 662:	01 90       	ld	r0, Z+
 664:	00 20       	and	r0, r0
 666:	e9 f7       	brne	.-6      	; 0x662 <nrf24_send_message+0x3e>
 668:	31 97       	sbiw	r30, 0x01	; 1
 66a:	8f 01       	movw	r16, r30
 66c:	0c 19       	sub	r16, r12
 66e:	1d 09       	sbc	r17, r13
 670:	84 e0       	ldi	r24, 0x04	; 4
 672:	0e 94 8d 02 	call	0x51a	; 0x51a <nrf24_state>
 676:	40 e0       	ldi	r20, 0x00	; 0
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	82 ee       	ldi	r24, 0xE2	; 226
 680:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 684:	40 e0       	ldi	r20, 0x00	; 0
 686:	50 e0       	ldi	r21, 0x00	; 0
 688:	60 e0       	ldi	r22, 0x00	; 0
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	81 ee       	ldi	r24, 0xE1	; 225
 68e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 692:	f0 92 a3 02 	sts	0x02A3, r15	; 0x8002a3 <data>
 696:	41 e0       	ldi	r20, 0x01	; 1
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	63 ea       	ldi	r22, 0xA3	; 163
 69c:	72 e0       	ldi	r23, 0x02	; 2
 69e:	87 e0       	ldi	r24, 0x07	; 7
 6a0:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 6a4:	41 e0       	ldi	r20, 0x01	; 1
 6a6:	50 e0       	ldi	r21, 0x00	; 0
 6a8:	63 ea       	ldi	r22, 0xA3	; 163
 6aa:	72 e0       	ldi	r23, 0x02	; 2
 6ac:	80 e0       	ldi	r24, 0x00	; 0
 6ae:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
 6b2:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <data>
 6b6:	80 64       	ori	r24, 0x40	; 64
 6b8:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 6bc:	41 e0       	ldi	r20, 0x01	; 1
 6be:	50 e0       	ldi	r21, 0x00	; 0
 6c0:	63 ea       	ldi	r22, 0xA3	; 163
 6c2:	72 e0       	ldi	r23, 0x02	; 2
 6c4:	80 e0       	ldi	r24, 0x00	; 0
 6c6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 6ca:	2a 98       	cbi	0x05, 2	; 5
 6cc:	80 eb       	ldi	r24, 0xB0	; 176
 6ce:	0e 94 11 04 	call	0x822	; 0x822 <spi_send>
 6d2:	ef ef       	ldi	r30, 0xFF	; 255
 6d4:	e0 0f       	add	r30, r16
 6d6:	00 23       	and	r16, r16
 6d8:	81 f0       	breq	.+32     	; 0x6fa <nrf24_send_message+0xd6>
 6da:	86 01       	movw	r16, r12
 6dc:	ee 2e       	mov	r14, r30
 6de:	f1 2c       	mov	r15, r1
 6e0:	f7 01       	movw	r30, r14
 6e2:	31 96       	adiw	r30, 0x01	; 1
 6e4:	76 01       	movw	r14, r12
 6e6:	ee 0e       	add	r14, r30
 6e8:	ff 1e       	adc	r15, r31
 6ea:	f8 01       	movw	r30, r16
 6ec:	81 91       	ld	r24, Z+
 6ee:	8f 01       	movw	r16, r30
 6f0:	0e 94 11 04 	call	0x822	; 0x822 <spi_send>
 6f4:	0e 15       	cp	r16, r14
 6f6:	1f 05       	cpc	r17, r15
 6f8:	c1 f7       	brne	.-16     	; 0x6ea <nrf24_send_message+0xc6>
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	0e 94 11 04 	call	0x822	; 0x822 <spi_send>
 700:	2a 9a       	sbi	0x05, 2	; 5
 702:	29 9a       	sbi	0x05, 1	; 5
 704:	f0 e5       	ldi	r31, 0x50	; 80
 706:	fa 95       	dec	r31
 708:	f1 f7       	brne	.-4      	; 0x706 <nrf24_send_message+0xe2>
 70a:	29 98       	cbi	0x05, 1	; 5
 70c:	41 e0       	ldi	r20, 0x01	; 1
 70e:	50 e0       	ldi	r21, 0x00	; 0
 710:	63 ea       	ldi	r22, 0xA3	; 163
 712:	72 e0       	ldi	r23, 0x02	; 2
 714:	87 e0       	ldi	r24, 0x07	; 7
 716:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
 71a:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <data>
 71e:	85 fd       	sbrc	r24, 5
 720:	0b c0       	rjmp	.+22     	; 0x738 <nrf24_send_message+0x114>
 722:	41 e0       	ldi	r20, 0x01	; 1
 724:	50 e0       	ldi	r21, 0x00	; 0
 726:	63 ea       	ldi	r22, 0xA3	; 163
 728:	72 e0       	ldi	r23, 0x02	; 2
 72a:	87 e0       	ldi	r24, 0x07	; 7
 72c:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
 730:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <data>
 734:	85 ff       	sbrs	r24, 5
 736:	f5 cf       	rjmp	.-22     	; 0x722 <nrf24_send_message+0xfe>
 738:	ce 01       	movw	r24, r28
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	9f 93       	push	r25
 73e:	8f 93       	push	r24
 740:	8c e5       	ldi	r24, 0x5C	; 92
 742:	92 e0       	ldi	r25, 0x02	; 2
 744:	9f 93       	push	r25
 746:	8f 93       	push	r24
 748:	0e 94 81 04 	call	0x902	; 0x902 <printf>
 74c:	41 e0       	ldi	r20, 0x01	; 1
 74e:	50 e0       	ldi	r21, 0x00	; 0
 750:	63 ea       	ldi	r22, 0xA3	; 163
 752:	72 e0       	ldi	r23, 0x02	; 2
 754:	80 e0       	ldi	r24, 0x00	; 0
 756:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
 75a:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <data>
 75e:	8f 7b       	andi	r24, 0xBF	; 191
 760:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
 764:	41 e0       	ldi	r20, 0x01	; 1
 766:	50 e0       	ldi	r21, 0x00	; 0
 768:	63 ea       	ldi	r22, 0xA3	; 163
 76a:	72 e0       	ldi	r23, 0x02	; 2
 76c:	80 e0       	ldi	r24, 0x00	; 0
 76e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
 772:	0e 94 07 03 	call	0x60e	; 0x60e <nrf24_start_listening>
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	a0 96       	adiw	r28, 0x20	; 32
 782:	0f b6       	in	r0, 0x3f	; 63
 784:	f8 94       	cli
 786:	de bf       	out	0x3e, r29	; 62
 788:	0f be       	out	0x3f, r0	; 63
 78a:	cd bf       	out	0x3d, r28	; 61
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	1f 91       	pop	r17
 792:	0f 91       	pop	r16
 794:	ff 90       	pop	r15
 796:	ef 90       	pop	r14
 798:	df 90       	pop	r13
 79a:	cf 90       	pop	r12
 79c:	08 95       	ret

0000079e <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	e8 e7       	ldi	r30, 0x78	; 120
 7a2:	f2 e0       	ldi	r31, 0x02	; 2
 7a4:	df 01       	movw	r26, r30
 7a6:	1d 92       	st	X+, r1
 7a8:	8a 95       	dec	r24
 7aa:	e9 f7       	brne	.-6      	; 0x7a6 <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 7ac:	41 e0       	ldi	r20, 0x01	; 1
 7ae:	50 e0       	ldi	r21, 0x00	; 0
 7b0:	63 ea       	ldi	r22, 0xA3	; 163
 7b2:	72 e0       	ldi	r23, 0x02	; 2
 7b4:	80 e6       	ldi	r24, 0x60	; 96
 7b6:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 7ba:	40 91 a3 02 	lds	r20, 0x02A3	; 0x8002a3 <data>
 7be:	44 23       	and	r20, r20
 7c0:	41 f0       	breq	.+16     	; 0x7d2 <nrf24_read_message+0x34>
 7c2:	50 e0       	ldi	r21, 0x00	; 0
 7c4:	4f 5f       	subi	r20, 0xFF	; 255
 7c6:	5f 4f       	sbci	r21, 0xFF	; 255
 7c8:	68 e7       	ldi	r22, 0x78	; 120
 7ca:	72 e0       	ldi	r23, 0x02	; 2
 7cc:	81 e6       	ldi	r24, 0x61	; 97
 7ce:	0e 94 b7 01 	call	0x36e	; 0x36e <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 7d2:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <rx_message.2167>
 7d6:	88 23       	and	r24, r24
 7d8:	69 f0       	breq	.+26     	; 0x7f4 <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 7da:	80 e4       	ldi	r24, 0x40	; 64
 7dc:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
		nrf24_write(STATUS,&data,1);
 7e0:	41 e0       	ldi	r20, 0x01	; 1
 7e2:	50 e0       	ldi	r21, 0x00	; 0
 7e4:	63 ea       	ldi	r22, 0xA3	; 163
 7e6:	72 e0       	ldi	r23, 0x02	; 2
 7e8:	87 e0       	ldi	r24, 0x07	; 7
 7ea:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
		
		return rx_message;
 7ee:	88 e7       	ldi	r24, 0x78	; 120
 7f0:	92 e0       	ldi	r25, 0x02	; 2
 7f2:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 7f4:	80 e4       	ldi	r24, 0x40	; 64
 7f6:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <data>
	nrf24_write(STATUS,&data,1);
 7fa:	41 e0       	ldi	r20, 0x01	; 1
 7fc:	50 e0       	ldi	r21, 0x00	; 0
 7fe:	63 ea       	ldi	r22, 0xA3	; 163
 800:	72 e0       	ldi	r23, 0x02	; 2
 802:	87 e0       	ldi	r24, 0x07	; 7
 804:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_write>
	
	return "failed";
 808:	8e e6       	ldi	r24, 0x6E	; 110
 80a:	92 e0       	ldi	r25, 0x02	; 2
 80c:	08 95       	ret

0000080e <spi_master_init>:
	loop_until_bit_is_set(SPSR0, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
 80e:	24 98       	cbi	0x04, 4	; 4
 810:	84 b1       	in	r24, 0x04	; 4
 812:	88 62       	ori	r24, 0x28	; 40
 814:	84 b9       	out	0x04, r24	; 4
 816:	80 e5       	ldi	r24, 0x50	; 80
 818:	8c bd       	out	0x2c, r24	; 44
 81a:	8d b5       	in	r24, 0x2d	; 45
 81c:	81 60       	ori	r24, 0x01	; 1
 81e:	8d bd       	out	0x2d, r24	; 45
 820:	08 95       	ret

00000822 <spi_send>:
 822:	8e bd       	out	0x2e, r24	; 46
 824:	0d b4       	in	r0, 0x2d	; 45
 826:	07 fe       	sbrs	r0, 7
 828:	fd cf       	rjmp	.-6      	; 0x824 <spi_send+0x2>
 82a:	08 95       	ret

0000082c <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR0 = send_data;
 82c:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR0, SPIF);
 82e:	0d b4       	in	r0, 0x2d	; 45
 830:	07 fe       	sbrs	r0, 7
 832:	fd cf       	rjmp	.-6      	; 0x82e <spi_exchange+0x2>
	return SPDR0;
 834:	8e b5       	in	r24, 0x2e	; 46
 836:	08 95       	ret

00000838 <uart_putchar>:
	stdout = &mystdout;
	stdin  = &mystdin;
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 838:	cf 93       	push	r28
 83a:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 83c:	8a 30       	cpi	r24, 0x0A	; 10
 83e:	19 f4       	brne	.+6      	; 0x846 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 840:	8d e0       	ldi	r24, 0x0D	; 13
 842:	0e 94 1c 04 	call	0x838	; 0x838 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 846:	e0 ec       	ldi	r30, 0xC0	; 192
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	80 81       	ld	r24, Z
 84c:	85 ff       	sbrs	r24, 5
 84e:	fd cf       	rjmp	.-6      	; 0x84a <uart_putchar+0x12>
	UDR0 = c;
 850:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 854:	80 e0       	ldi	r24, 0x00	; 0
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	cf 91       	pop	r28
 85a:	08 95       	ret

0000085c <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 85c:	e0 ec       	ldi	r30, 0xC0	; 192
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	80 81       	ld	r24, Z
 862:	88 23       	and	r24, r24
 864:	ec f7       	brge	.-6      	; 0x860 <uart_getchar+0x4>
	return UDR0;
 866:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	08 95       	ret

0000086e <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
	UBRR0H = MYUBRR >> 8;
 86e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = MYUBRR;
 872:	87 e6       	ldi	r24, 0x67	; 103
 874:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 878:	88 e1       	ldi	r24, 0x18	; 24
 87a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	
	stdout = &mystdout;
 87e:	e4 ea       	ldi	r30, 0xA4	; 164
 880:	f2 e0       	ldi	r31, 0x02	; 2
 882:	88 e1       	ldi	r24, 0x18	; 24
 884:	91 e0       	ldi	r25, 0x01	; 1
 886:	93 83       	std	Z+3, r25	; 0x03
 888:	82 83       	std	Z+2, r24	; 0x02
	stdin  = &mystdin;
 88a:	8a e0       	ldi	r24, 0x0A	; 10
 88c:	91 e0       	ldi	r25, 0x01	; 1
 88e:	91 83       	std	Z+1, r25	; 0x01
 890:	80 83       	st	Z, r24
 892:	08 95       	ret

00000894 <strcpy>:
 894:	fb 01       	movw	r30, r22
 896:	dc 01       	movw	r26, r24
 898:	01 90       	ld	r0, Z+
 89a:	0d 92       	st	X+, r0
 89c:	00 20       	and	r0, r0
 89e:	e1 f7       	brne	.-8      	; 0x898 <strcpy+0x4>
 8a0:	08 95       	ret

000008a2 <itoa>:
 8a2:	45 32       	cpi	r20, 0x25	; 37
 8a4:	51 05       	cpc	r21, r1
 8a6:	20 f4       	brcc	.+8      	; 0x8b0 <itoa+0xe>
 8a8:	42 30       	cpi	r20, 0x02	; 2
 8aa:	10 f0       	brcs	.+4      	; 0x8b0 <itoa+0xe>
 8ac:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__itoa_ncheck>
 8b0:	fb 01       	movw	r30, r22
 8b2:	10 82       	st	Z, r1
 8b4:	cb 01       	movw	r24, r22
 8b6:	08 95       	ret

000008b8 <__itoa_ncheck>:
 8b8:	bb 27       	eor	r27, r27
 8ba:	4a 30       	cpi	r20, 0x0A	; 10
 8bc:	31 f4       	brne	.+12     	; 0x8ca <__itoa_ncheck+0x12>
 8be:	99 23       	and	r25, r25
 8c0:	22 f4       	brpl	.+8      	; 0x8ca <__itoa_ncheck+0x12>
 8c2:	bd e2       	ldi	r27, 0x2D	; 45
 8c4:	90 95       	com	r25
 8c6:	81 95       	neg	r24
 8c8:	9f 4f       	sbci	r25, 0xFF	; 255
 8ca:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__utoa_common>

000008ce <__utoa_ncheck>:
 8ce:	bb 27       	eor	r27, r27

000008d0 <__utoa_common>:
 8d0:	fb 01       	movw	r30, r22
 8d2:	55 27       	eor	r21, r21
 8d4:	aa 27       	eor	r26, r26
 8d6:	88 0f       	add	r24, r24
 8d8:	99 1f       	adc	r25, r25
 8da:	aa 1f       	adc	r26, r26
 8dc:	a4 17       	cp	r26, r20
 8de:	10 f0       	brcs	.+4      	; 0x8e4 <__utoa_common+0x14>
 8e0:	a4 1b       	sub	r26, r20
 8e2:	83 95       	inc	r24
 8e4:	50 51       	subi	r21, 0x10	; 16
 8e6:	b9 f7       	brne	.-18     	; 0x8d6 <__utoa_common+0x6>
 8e8:	a0 5d       	subi	r26, 0xD0	; 208
 8ea:	aa 33       	cpi	r26, 0x3A	; 58
 8ec:	08 f0       	brcs	.+2      	; 0x8f0 <__utoa_common+0x20>
 8ee:	a9 5d       	subi	r26, 0xD9	; 217
 8f0:	a1 93       	st	Z+, r26
 8f2:	00 97       	sbiw	r24, 0x00	; 0
 8f4:	79 f7       	brne	.-34     	; 0x8d4 <__utoa_common+0x4>
 8f6:	b1 11       	cpse	r27, r1
 8f8:	b1 93       	st	Z+, r27
 8fa:	11 92       	st	Z+, r1
 8fc:	cb 01       	movw	r24, r22
 8fe:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <strrev>

00000902 <printf>:
 902:	a0 e0       	ldi	r26, 0x00	; 0
 904:	b0 e0       	ldi	r27, 0x00	; 0
 906:	e7 e8       	ldi	r30, 0x87	; 135
 908:	f4 e0       	ldi	r31, 0x04	; 4
 90a:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__prologue_saves__+0x20>
 90e:	ae 01       	movw	r20, r28
 910:	4b 5f       	subi	r20, 0xFB	; 251
 912:	5f 4f       	sbci	r21, 0xFF	; 255
 914:	fa 01       	movw	r30, r20
 916:	61 91       	ld	r22, Z+
 918:	71 91       	ld	r23, Z+
 91a:	af 01       	movw	r20, r30
 91c:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <__iob+0x2>
 920:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <__iob+0x3>
 924:	0e 94 c7 04 	call	0x98e	; 0x98e <vfprintf>
 928:	e2 e0       	ldi	r30, 0x02	; 2
 92a:	0c 94 94 07 	jmp	0xf28	; 0xf28 <__epilogue_restores__+0x20>

0000092e <puts>:
 92e:	0f 93       	push	r16
 930:	1f 93       	push	r17
 932:	cf 93       	push	r28
 934:	df 93       	push	r29
 936:	e0 91 a6 02 	lds	r30, 0x02A6	; 0x8002a6 <__iob+0x2>
 93a:	f0 91 a7 02 	lds	r31, 0x02A7	; 0x8002a7 <__iob+0x3>
 93e:	23 81       	ldd	r18, Z+3	; 0x03
 940:	21 ff       	sbrs	r18, 1
 942:	1b c0       	rjmp	.+54     	; 0x97a <puts+0x4c>
 944:	8c 01       	movw	r16, r24
 946:	d0 e0       	ldi	r29, 0x00	; 0
 948:	c0 e0       	ldi	r28, 0x00	; 0
 94a:	f8 01       	movw	r30, r16
 94c:	81 91       	ld	r24, Z+
 94e:	8f 01       	movw	r16, r30
 950:	60 91 a6 02 	lds	r22, 0x02A6	; 0x8002a6 <__iob+0x2>
 954:	70 91 a7 02 	lds	r23, 0x02A7	; 0x8002a7 <__iob+0x3>
 958:	db 01       	movw	r26, r22
 95a:	18 96       	adiw	r26, 0x08	; 8
 95c:	ed 91       	ld	r30, X+
 95e:	fc 91       	ld	r31, X
 960:	19 97       	sbiw	r26, 0x09	; 9
 962:	88 23       	and	r24, r24
 964:	31 f0       	breq	.+12     	; 0x972 <puts+0x44>
 966:	09 95       	icall
 968:	89 2b       	or	r24, r25
 96a:	79 f3       	breq	.-34     	; 0x94a <puts+0x1c>
 96c:	df ef       	ldi	r29, 0xFF	; 255
 96e:	cf ef       	ldi	r28, 0xFF	; 255
 970:	ec cf       	rjmp	.-40     	; 0x94a <puts+0x1c>
 972:	8a e0       	ldi	r24, 0x0A	; 10
 974:	09 95       	icall
 976:	89 2b       	or	r24, r25
 978:	19 f0       	breq	.+6      	; 0x980 <puts+0x52>
 97a:	8f ef       	ldi	r24, 0xFF	; 255
 97c:	9f ef       	ldi	r25, 0xFF	; 255
 97e:	02 c0       	rjmp	.+4      	; 0x984 <puts+0x56>
 980:	8d 2f       	mov	r24, r29
 982:	9c 2f       	mov	r25, r28
 984:	df 91       	pop	r29
 986:	cf 91       	pop	r28
 988:	1f 91       	pop	r17
 98a:	0f 91       	pop	r16
 98c:	08 95       	ret

0000098e <vfprintf>:
 98e:	ab e0       	ldi	r26, 0x0B	; 11
 990:	b0 e0       	ldi	r27, 0x00	; 0
 992:	ed ec       	ldi	r30, 0xCD	; 205
 994:	f4 e0       	ldi	r31, 0x04	; 4
 996:	0c 94 68 07 	jmp	0xed0	; 0xed0 <__prologue_saves__>
 99a:	6c 01       	movw	r12, r24
 99c:	7b 01       	movw	r14, r22
 99e:	8a 01       	movw	r16, r20
 9a0:	fc 01       	movw	r30, r24
 9a2:	17 82       	std	Z+7, r1	; 0x07
 9a4:	16 82       	std	Z+6, r1	; 0x06
 9a6:	83 81       	ldd	r24, Z+3	; 0x03
 9a8:	81 ff       	sbrs	r24, 1
 9aa:	cc c1       	rjmp	.+920    	; 0xd44 <vfprintf+0x3b6>
 9ac:	ce 01       	movw	r24, r28
 9ae:	01 96       	adiw	r24, 0x01	; 1
 9b0:	3c 01       	movw	r6, r24
 9b2:	f6 01       	movw	r30, r12
 9b4:	93 81       	ldd	r25, Z+3	; 0x03
 9b6:	f7 01       	movw	r30, r14
 9b8:	93 fd       	sbrc	r25, 3
 9ba:	85 91       	lpm	r24, Z+
 9bc:	93 ff       	sbrs	r25, 3
 9be:	81 91       	ld	r24, Z+
 9c0:	7f 01       	movw	r14, r30
 9c2:	88 23       	and	r24, r24
 9c4:	09 f4       	brne	.+2      	; 0x9c8 <vfprintf+0x3a>
 9c6:	ba c1       	rjmp	.+884    	; 0xd3c <vfprintf+0x3ae>
 9c8:	85 32       	cpi	r24, 0x25	; 37
 9ca:	39 f4       	brne	.+14     	; 0x9da <vfprintf+0x4c>
 9cc:	93 fd       	sbrc	r25, 3
 9ce:	85 91       	lpm	r24, Z+
 9d0:	93 ff       	sbrs	r25, 3
 9d2:	81 91       	ld	r24, Z+
 9d4:	7f 01       	movw	r14, r30
 9d6:	85 32       	cpi	r24, 0x25	; 37
 9d8:	29 f4       	brne	.+10     	; 0x9e4 <vfprintf+0x56>
 9da:	b6 01       	movw	r22, r12
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 9e2:	e7 cf       	rjmp	.-50     	; 0x9b2 <vfprintf+0x24>
 9e4:	91 2c       	mov	r9, r1
 9e6:	21 2c       	mov	r2, r1
 9e8:	31 2c       	mov	r3, r1
 9ea:	ff e1       	ldi	r31, 0x1F	; 31
 9ec:	f3 15       	cp	r31, r3
 9ee:	d8 f0       	brcs	.+54     	; 0xa26 <vfprintf+0x98>
 9f0:	8b 32       	cpi	r24, 0x2B	; 43
 9f2:	79 f0       	breq	.+30     	; 0xa12 <vfprintf+0x84>
 9f4:	38 f4       	brcc	.+14     	; 0xa04 <vfprintf+0x76>
 9f6:	80 32       	cpi	r24, 0x20	; 32
 9f8:	79 f0       	breq	.+30     	; 0xa18 <vfprintf+0x8a>
 9fa:	83 32       	cpi	r24, 0x23	; 35
 9fc:	a1 f4       	brne	.+40     	; 0xa26 <vfprintf+0x98>
 9fe:	23 2d       	mov	r18, r3
 a00:	20 61       	ori	r18, 0x10	; 16
 a02:	1d c0       	rjmp	.+58     	; 0xa3e <vfprintf+0xb0>
 a04:	8d 32       	cpi	r24, 0x2D	; 45
 a06:	61 f0       	breq	.+24     	; 0xa20 <vfprintf+0x92>
 a08:	80 33       	cpi	r24, 0x30	; 48
 a0a:	69 f4       	brne	.+26     	; 0xa26 <vfprintf+0x98>
 a0c:	23 2d       	mov	r18, r3
 a0e:	21 60       	ori	r18, 0x01	; 1
 a10:	16 c0       	rjmp	.+44     	; 0xa3e <vfprintf+0xb0>
 a12:	83 2d       	mov	r24, r3
 a14:	82 60       	ori	r24, 0x02	; 2
 a16:	38 2e       	mov	r3, r24
 a18:	e3 2d       	mov	r30, r3
 a1a:	e4 60       	ori	r30, 0x04	; 4
 a1c:	3e 2e       	mov	r3, r30
 a1e:	2a c0       	rjmp	.+84     	; 0xa74 <vfprintf+0xe6>
 a20:	f3 2d       	mov	r31, r3
 a22:	f8 60       	ori	r31, 0x08	; 8
 a24:	1d c0       	rjmp	.+58     	; 0xa60 <vfprintf+0xd2>
 a26:	37 fc       	sbrc	r3, 7
 a28:	2d c0       	rjmp	.+90     	; 0xa84 <vfprintf+0xf6>
 a2a:	20 ed       	ldi	r18, 0xD0	; 208
 a2c:	28 0f       	add	r18, r24
 a2e:	2a 30       	cpi	r18, 0x0A	; 10
 a30:	40 f0       	brcs	.+16     	; 0xa42 <vfprintf+0xb4>
 a32:	8e 32       	cpi	r24, 0x2E	; 46
 a34:	b9 f4       	brne	.+46     	; 0xa64 <vfprintf+0xd6>
 a36:	36 fc       	sbrc	r3, 6
 a38:	81 c1       	rjmp	.+770    	; 0xd3c <vfprintf+0x3ae>
 a3a:	23 2d       	mov	r18, r3
 a3c:	20 64       	ori	r18, 0x40	; 64
 a3e:	32 2e       	mov	r3, r18
 a40:	19 c0       	rjmp	.+50     	; 0xa74 <vfprintf+0xe6>
 a42:	36 fe       	sbrs	r3, 6
 a44:	06 c0       	rjmp	.+12     	; 0xa52 <vfprintf+0xc4>
 a46:	8a e0       	ldi	r24, 0x0A	; 10
 a48:	98 9e       	mul	r9, r24
 a4a:	20 0d       	add	r18, r0
 a4c:	11 24       	eor	r1, r1
 a4e:	92 2e       	mov	r9, r18
 a50:	11 c0       	rjmp	.+34     	; 0xa74 <vfprintf+0xe6>
 a52:	ea e0       	ldi	r30, 0x0A	; 10
 a54:	2e 9e       	mul	r2, r30
 a56:	20 0d       	add	r18, r0
 a58:	11 24       	eor	r1, r1
 a5a:	22 2e       	mov	r2, r18
 a5c:	f3 2d       	mov	r31, r3
 a5e:	f0 62       	ori	r31, 0x20	; 32
 a60:	3f 2e       	mov	r3, r31
 a62:	08 c0       	rjmp	.+16     	; 0xa74 <vfprintf+0xe6>
 a64:	8c 36       	cpi	r24, 0x6C	; 108
 a66:	21 f4       	brne	.+8      	; 0xa70 <vfprintf+0xe2>
 a68:	83 2d       	mov	r24, r3
 a6a:	80 68       	ori	r24, 0x80	; 128
 a6c:	38 2e       	mov	r3, r24
 a6e:	02 c0       	rjmp	.+4      	; 0xa74 <vfprintf+0xe6>
 a70:	88 36       	cpi	r24, 0x68	; 104
 a72:	41 f4       	brne	.+16     	; 0xa84 <vfprintf+0xf6>
 a74:	f7 01       	movw	r30, r14
 a76:	93 fd       	sbrc	r25, 3
 a78:	85 91       	lpm	r24, Z+
 a7a:	93 ff       	sbrs	r25, 3
 a7c:	81 91       	ld	r24, Z+
 a7e:	7f 01       	movw	r14, r30
 a80:	81 11       	cpse	r24, r1
 a82:	b3 cf       	rjmp	.-154    	; 0x9ea <vfprintf+0x5c>
 a84:	98 2f       	mov	r25, r24
 a86:	9f 7d       	andi	r25, 0xDF	; 223
 a88:	95 54       	subi	r25, 0x45	; 69
 a8a:	93 30       	cpi	r25, 0x03	; 3
 a8c:	28 f4       	brcc	.+10     	; 0xa98 <vfprintf+0x10a>
 a8e:	0c 5f       	subi	r16, 0xFC	; 252
 a90:	1f 4f       	sbci	r17, 0xFF	; 255
 a92:	9f e3       	ldi	r25, 0x3F	; 63
 a94:	99 83       	std	Y+1, r25	; 0x01
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <vfprintf+0x124>
 a98:	83 36       	cpi	r24, 0x63	; 99
 a9a:	31 f0       	breq	.+12     	; 0xaa8 <vfprintf+0x11a>
 a9c:	83 37       	cpi	r24, 0x73	; 115
 a9e:	71 f0       	breq	.+28     	; 0xabc <vfprintf+0x12e>
 aa0:	83 35       	cpi	r24, 0x53	; 83
 aa2:	09 f0       	breq	.+2      	; 0xaa6 <vfprintf+0x118>
 aa4:	59 c0       	rjmp	.+178    	; 0xb58 <vfprintf+0x1ca>
 aa6:	21 c0       	rjmp	.+66     	; 0xaea <vfprintf+0x15c>
 aa8:	f8 01       	movw	r30, r16
 aaa:	80 81       	ld	r24, Z
 aac:	89 83       	std	Y+1, r24	; 0x01
 aae:	0e 5f       	subi	r16, 0xFE	; 254
 ab0:	1f 4f       	sbci	r17, 0xFF	; 255
 ab2:	88 24       	eor	r8, r8
 ab4:	83 94       	inc	r8
 ab6:	91 2c       	mov	r9, r1
 ab8:	53 01       	movw	r10, r6
 aba:	13 c0       	rjmp	.+38     	; 0xae2 <vfprintf+0x154>
 abc:	28 01       	movw	r4, r16
 abe:	f2 e0       	ldi	r31, 0x02	; 2
 ac0:	4f 0e       	add	r4, r31
 ac2:	51 1c       	adc	r5, r1
 ac4:	f8 01       	movw	r30, r16
 ac6:	a0 80       	ld	r10, Z
 ac8:	b1 80       	ldd	r11, Z+1	; 0x01
 aca:	36 fe       	sbrs	r3, 6
 acc:	03 c0       	rjmp	.+6      	; 0xad4 <vfprintf+0x146>
 ace:	69 2d       	mov	r22, r9
 ad0:	70 e0       	ldi	r23, 0x00	; 0
 ad2:	02 c0       	rjmp	.+4      	; 0xad8 <vfprintf+0x14a>
 ad4:	6f ef       	ldi	r22, 0xFF	; 255
 ad6:	7f ef       	ldi	r23, 0xFF	; 255
 ad8:	c5 01       	movw	r24, r10
 ada:	0e 94 b3 06 	call	0xd66	; 0xd66 <strnlen>
 ade:	4c 01       	movw	r8, r24
 ae0:	82 01       	movw	r16, r4
 ae2:	f3 2d       	mov	r31, r3
 ae4:	ff 77       	andi	r31, 0x7F	; 127
 ae6:	3f 2e       	mov	r3, r31
 ae8:	16 c0       	rjmp	.+44     	; 0xb16 <vfprintf+0x188>
 aea:	28 01       	movw	r4, r16
 aec:	22 e0       	ldi	r18, 0x02	; 2
 aee:	42 0e       	add	r4, r18
 af0:	51 1c       	adc	r5, r1
 af2:	f8 01       	movw	r30, r16
 af4:	a0 80       	ld	r10, Z
 af6:	b1 80       	ldd	r11, Z+1	; 0x01
 af8:	36 fe       	sbrs	r3, 6
 afa:	03 c0       	rjmp	.+6      	; 0xb02 <vfprintf+0x174>
 afc:	69 2d       	mov	r22, r9
 afe:	70 e0       	ldi	r23, 0x00	; 0
 b00:	02 c0       	rjmp	.+4      	; 0xb06 <vfprintf+0x178>
 b02:	6f ef       	ldi	r22, 0xFF	; 255
 b04:	7f ef       	ldi	r23, 0xFF	; 255
 b06:	c5 01       	movw	r24, r10
 b08:	0e 94 a8 06 	call	0xd50	; 0xd50 <strnlen_P>
 b0c:	4c 01       	movw	r8, r24
 b0e:	f3 2d       	mov	r31, r3
 b10:	f0 68       	ori	r31, 0x80	; 128
 b12:	3f 2e       	mov	r3, r31
 b14:	82 01       	movw	r16, r4
 b16:	33 fc       	sbrc	r3, 3
 b18:	1b c0       	rjmp	.+54     	; 0xb50 <vfprintf+0x1c2>
 b1a:	82 2d       	mov	r24, r2
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	88 16       	cp	r8, r24
 b20:	99 06       	cpc	r9, r25
 b22:	b0 f4       	brcc	.+44     	; 0xb50 <vfprintf+0x1c2>
 b24:	b6 01       	movw	r22, r12
 b26:	80 e2       	ldi	r24, 0x20	; 32
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 b2e:	2a 94       	dec	r2
 b30:	f4 cf       	rjmp	.-24     	; 0xb1a <vfprintf+0x18c>
 b32:	f5 01       	movw	r30, r10
 b34:	37 fc       	sbrc	r3, 7
 b36:	85 91       	lpm	r24, Z+
 b38:	37 fe       	sbrs	r3, 7
 b3a:	81 91       	ld	r24, Z+
 b3c:	5f 01       	movw	r10, r30
 b3e:	b6 01       	movw	r22, r12
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 b46:	21 10       	cpse	r2, r1
 b48:	2a 94       	dec	r2
 b4a:	21 e0       	ldi	r18, 0x01	; 1
 b4c:	82 1a       	sub	r8, r18
 b4e:	91 08       	sbc	r9, r1
 b50:	81 14       	cp	r8, r1
 b52:	91 04       	cpc	r9, r1
 b54:	71 f7       	brne	.-36     	; 0xb32 <vfprintf+0x1a4>
 b56:	e8 c0       	rjmp	.+464    	; 0xd28 <vfprintf+0x39a>
 b58:	84 36       	cpi	r24, 0x64	; 100
 b5a:	11 f0       	breq	.+4      	; 0xb60 <vfprintf+0x1d2>
 b5c:	89 36       	cpi	r24, 0x69	; 105
 b5e:	41 f5       	brne	.+80     	; 0xbb0 <vfprintf+0x222>
 b60:	f8 01       	movw	r30, r16
 b62:	37 fe       	sbrs	r3, 7
 b64:	07 c0       	rjmp	.+14     	; 0xb74 <vfprintf+0x1e6>
 b66:	60 81       	ld	r22, Z
 b68:	71 81       	ldd	r23, Z+1	; 0x01
 b6a:	82 81       	ldd	r24, Z+2	; 0x02
 b6c:	93 81       	ldd	r25, Z+3	; 0x03
 b6e:	0c 5f       	subi	r16, 0xFC	; 252
 b70:	1f 4f       	sbci	r17, 0xFF	; 255
 b72:	08 c0       	rjmp	.+16     	; 0xb84 <vfprintf+0x1f6>
 b74:	60 81       	ld	r22, Z
 b76:	71 81       	ldd	r23, Z+1	; 0x01
 b78:	07 2e       	mov	r0, r23
 b7a:	00 0c       	add	r0, r0
 b7c:	88 0b       	sbc	r24, r24
 b7e:	99 0b       	sbc	r25, r25
 b80:	0e 5f       	subi	r16, 0xFE	; 254
 b82:	1f 4f       	sbci	r17, 0xFF	; 255
 b84:	f3 2d       	mov	r31, r3
 b86:	ff 76       	andi	r31, 0x6F	; 111
 b88:	3f 2e       	mov	r3, r31
 b8a:	97 ff       	sbrs	r25, 7
 b8c:	09 c0       	rjmp	.+18     	; 0xba0 <vfprintf+0x212>
 b8e:	90 95       	com	r25
 b90:	80 95       	com	r24
 b92:	70 95       	com	r23
 b94:	61 95       	neg	r22
 b96:	7f 4f       	sbci	r23, 0xFF	; 255
 b98:	8f 4f       	sbci	r24, 0xFF	; 255
 b9a:	9f 4f       	sbci	r25, 0xFF	; 255
 b9c:	f0 68       	ori	r31, 0x80	; 128
 b9e:	3f 2e       	mov	r3, r31
 ba0:	2a e0       	ldi	r18, 0x0A	; 10
 ba2:	30 e0       	ldi	r19, 0x00	; 0
 ba4:	a3 01       	movw	r20, r6
 ba6:	0e 94 0a 07 	call	0xe14	; 0xe14 <__ultoa_invert>
 baa:	88 2e       	mov	r8, r24
 bac:	86 18       	sub	r8, r6
 bae:	45 c0       	rjmp	.+138    	; 0xc3a <vfprintf+0x2ac>
 bb0:	85 37       	cpi	r24, 0x75	; 117
 bb2:	31 f4       	brne	.+12     	; 0xbc0 <vfprintf+0x232>
 bb4:	23 2d       	mov	r18, r3
 bb6:	2f 7e       	andi	r18, 0xEF	; 239
 bb8:	b2 2e       	mov	r11, r18
 bba:	2a e0       	ldi	r18, 0x0A	; 10
 bbc:	30 e0       	ldi	r19, 0x00	; 0
 bbe:	25 c0       	rjmp	.+74     	; 0xc0a <vfprintf+0x27c>
 bc0:	93 2d       	mov	r25, r3
 bc2:	99 7f       	andi	r25, 0xF9	; 249
 bc4:	b9 2e       	mov	r11, r25
 bc6:	8f 36       	cpi	r24, 0x6F	; 111
 bc8:	c1 f0       	breq	.+48     	; 0xbfa <vfprintf+0x26c>
 bca:	18 f4       	brcc	.+6      	; 0xbd2 <vfprintf+0x244>
 bcc:	88 35       	cpi	r24, 0x58	; 88
 bce:	79 f0       	breq	.+30     	; 0xbee <vfprintf+0x260>
 bd0:	b5 c0       	rjmp	.+362    	; 0xd3c <vfprintf+0x3ae>
 bd2:	80 37       	cpi	r24, 0x70	; 112
 bd4:	19 f0       	breq	.+6      	; 0xbdc <vfprintf+0x24e>
 bd6:	88 37       	cpi	r24, 0x78	; 120
 bd8:	21 f0       	breq	.+8      	; 0xbe2 <vfprintf+0x254>
 bda:	b0 c0       	rjmp	.+352    	; 0xd3c <vfprintf+0x3ae>
 bdc:	e9 2f       	mov	r30, r25
 bde:	e0 61       	ori	r30, 0x10	; 16
 be0:	be 2e       	mov	r11, r30
 be2:	b4 fe       	sbrs	r11, 4
 be4:	0d c0       	rjmp	.+26     	; 0xc00 <vfprintf+0x272>
 be6:	fb 2d       	mov	r31, r11
 be8:	f4 60       	ori	r31, 0x04	; 4
 bea:	bf 2e       	mov	r11, r31
 bec:	09 c0       	rjmp	.+18     	; 0xc00 <vfprintf+0x272>
 bee:	34 fe       	sbrs	r3, 4
 bf0:	0a c0       	rjmp	.+20     	; 0xc06 <vfprintf+0x278>
 bf2:	29 2f       	mov	r18, r25
 bf4:	26 60       	ori	r18, 0x06	; 6
 bf6:	b2 2e       	mov	r11, r18
 bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x278>
 bfa:	28 e0       	ldi	r18, 0x08	; 8
 bfc:	30 e0       	ldi	r19, 0x00	; 0
 bfe:	05 c0       	rjmp	.+10     	; 0xc0a <vfprintf+0x27c>
 c00:	20 e1       	ldi	r18, 0x10	; 16
 c02:	30 e0       	ldi	r19, 0x00	; 0
 c04:	02 c0       	rjmp	.+4      	; 0xc0a <vfprintf+0x27c>
 c06:	20 e1       	ldi	r18, 0x10	; 16
 c08:	32 e0       	ldi	r19, 0x02	; 2
 c0a:	f8 01       	movw	r30, r16
 c0c:	b7 fe       	sbrs	r11, 7
 c0e:	07 c0       	rjmp	.+14     	; 0xc1e <vfprintf+0x290>
 c10:	60 81       	ld	r22, Z
 c12:	71 81       	ldd	r23, Z+1	; 0x01
 c14:	82 81       	ldd	r24, Z+2	; 0x02
 c16:	93 81       	ldd	r25, Z+3	; 0x03
 c18:	0c 5f       	subi	r16, 0xFC	; 252
 c1a:	1f 4f       	sbci	r17, 0xFF	; 255
 c1c:	06 c0       	rjmp	.+12     	; 0xc2a <vfprintf+0x29c>
 c1e:	60 81       	ld	r22, Z
 c20:	71 81       	ldd	r23, Z+1	; 0x01
 c22:	80 e0       	ldi	r24, 0x00	; 0
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	0e 5f       	subi	r16, 0xFE	; 254
 c28:	1f 4f       	sbci	r17, 0xFF	; 255
 c2a:	a3 01       	movw	r20, r6
 c2c:	0e 94 0a 07 	call	0xe14	; 0xe14 <__ultoa_invert>
 c30:	88 2e       	mov	r8, r24
 c32:	86 18       	sub	r8, r6
 c34:	fb 2d       	mov	r31, r11
 c36:	ff 77       	andi	r31, 0x7F	; 127
 c38:	3f 2e       	mov	r3, r31
 c3a:	36 fe       	sbrs	r3, 6
 c3c:	0d c0       	rjmp	.+26     	; 0xc58 <vfprintf+0x2ca>
 c3e:	23 2d       	mov	r18, r3
 c40:	2e 7f       	andi	r18, 0xFE	; 254
 c42:	a2 2e       	mov	r10, r18
 c44:	89 14       	cp	r8, r9
 c46:	58 f4       	brcc	.+22     	; 0xc5e <vfprintf+0x2d0>
 c48:	34 fe       	sbrs	r3, 4
 c4a:	0b c0       	rjmp	.+22     	; 0xc62 <vfprintf+0x2d4>
 c4c:	32 fc       	sbrc	r3, 2
 c4e:	09 c0       	rjmp	.+18     	; 0xc62 <vfprintf+0x2d4>
 c50:	83 2d       	mov	r24, r3
 c52:	8e 7e       	andi	r24, 0xEE	; 238
 c54:	a8 2e       	mov	r10, r24
 c56:	05 c0       	rjmp	.+10     	; 0xc62 <vfprintf+0x2d4>
 c58:	b8 2c       	mov	r11, r8
 c5a:	a3 2c       	mov	r10, r3
 c5c:	03 c0       	rjmp	.+6      	; 0xc64 <vfprintf+0x2d6>
 c5e:	b8 2c       	mov	r11, r8
 c60:	01 c0       	rjmp	.+2      	; 0xc64 <vfprintf+0x2d6>
 c62:	b9 2c       	mov	r11, r9
 c64:	a4 fe       	sbrs	r10, 4
 c66:	0f c0       	rjmp	.+30     	; 0xc86 <vfprintf+0x2f8>
 c68:	fe 01       	movw	r30, r28
 c6a:	e8 0d       	add	r30, r8
 c6c:	f1 1d       	adc	r31, r1
 c6e:	80 81       	ld	r24, Z
 c70:	80 33       	cpi	r24, 0x30	; 48
 c72:	21 f4       	brne	.+8      	; 0xc7c <vfprintf+0x2ee>
 c74:	9a 2d       	mov	r25, r10
 c76:	99 7e       	andi	r25, 0xE9	; 233
 c78:	a9 2e       	mov	r10, r25
 c7a:	09 c0       	rjmp	.+18     	; 0xc8e <vfprintf+0x300>
 c7c:	a2 fe       	sbrs	r10, 2
 c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x2fe>
 c80:	b3 94       	inc	r11
 c82:	b3 94       	inc	r11
 c84:	04 c0       	rjmp	.+8      	; 0xc8e <vfprintf+0x300>
 c86:	8a 2d       	mov	r24, r10
 c88:	86 78       	andi	r24, 0x86	; 134
 c8a:	09 f0       	breq	.+2      	; 0xc8e <vfprintf+0x300>
 c8c:	b3 94       	inc	r11
 c8e:	a3 fc       	sbrc	r10, 3
 c90:	11 c0       	rjmp	.+34     	; 0xcb4 <vfprintf+0x326>
 c92:	a0 fe       	sbrs	r10, 0
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x314>
 c96:	b2 14       	cp	r11, r2
 c98:	88 f4       	brcc	.+34     	; 0xcbc <vfprintf+0x32e>
 c9a:	28 0c       	add	r2, r8
 c9c:	92 2c       	mov	r9, r2
 c9e:	9b 18       	sub	r9, r11
 ca0:	0e c0       	rjmp	.+28     	; 0xcbe <vfprintf+0x330>
 ca2:	b2 14       	cp	r11, r2
 ca4:	60 f4       	brcc	.+24     	; 0xcbe <vfprintf+0x330>
 ca6:	b6 01       	movw	r22, r12
 ca8:	80 e2       	ldi	r24, 0x20	; 32
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 cb0:	b3 94       	inc	r11
 cb2:	f7 cf       	rjmp	.-18     	; 0xca2 <vfprintf+0x314>
 cb4:	b2 14       	cp	r11, r2
 cb6:	18 f4       	brcc	.+6      	; 0xcbe <vfprintf+0x330>
 cb8:	2b 18       	sub	r2, r11
 cba:	02 c0       	rjmp	.+4      	; 0xcc0 <vfprintf+0x332>
 cbc:	98 2c       	mov	r9, r8
 cbe:	21 2c       	mov	r2, r1
 cc0:	a4 fe       	sbrs	r10, 4
 cc2:	10 c0       	rjmp	.+32     	; 0xce4 <vfprintf+0x356>
 cc4:	b6 01       	movw	r22, r12
 cc6:	80 e3       	ldi	r24, 0x30	; 48
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 cce:	a2 fe       	sbrs	r10, 2
 cd0:	17 c0       	rjmp	.+46     	; 0xd00 <vfprintf+0x372>
 cd2:	a1 fc       	sbrc	r10, 1
 cd4:	03 c0       	rjmp	.+6      	; 0xcdc <vfprintf+0x34e>
 cd6:	88 e7       	ldi	r24, 0x78	; 120
 cd8:	90 e0       	ldi	r25, 0x00	; 0
 cda:	02 c0       	rjmp	.+4      	; 0xce0 <vfprintf+0x352>
 cdc:	88 e5       	ldi	r24, 0x58	; 88
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	b6 01       	movw	r22, r12
 ce2:	0c c0       	rjmp	.+24     	; 0xcfc <vfprintf+0x36e>
 ce4:	8a 2d       	mov	r24, r10
 ce6:	86 78       	andi	r24, 0x86	; 134
 ce8:	59 f0       	breq	.+22     	; 0xd00 <vfprintf+0x372>
 cea:	a1 fe       	sbrs	r10, 1
 cec:	02 c0       	rjmp	.+4      	; 0xcf2 <vfprintf+0x364>
 cee:	8b e2       	ldi	r24, 0x2B	; 43
 cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <vfprintf+0x366>
 cf2:	80 e2       	ldi	r24, 0x20	; 32
 cf4:	a7 fc       	sbrc	r10, 7
 cf6:	8d e2       	ldi	r24, 0x2D	; 45
 cf8:	b6 01       	movw	r22, r12
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 d00:	89 14       	cp	r8, r9
 d02:	38 f4       	brcc	.+14     	; 0xd12 <vfprintf+0x384>
 d04:	b6 01       	movw	r22, r12
 d06:	80 e3       	ldi	r24, 0x30	; 48
 d08:	90 e0       	ldi	r25, 0x00	; 0
 d0a:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 d0e:	9a 94       	dec	r9
 d10:	f7 cf       	rjmp	.-18     	; 0xd00 <vfprintf+0x372>
 d12:	8a 94       	dec	r8
 d14:	f3 01       	movw	r30, r6
 d16:	e8 0d       	add	r30, r8
 d18:	f1 1d       	adc	r31, r1
 d1a:	80 81       	ld	r24, Z
 d1c:	b6 01       	movw	r22, r12
 d1e:	90 e0       	ldi	r25, 0x00	; 0
 d20:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 d24:	81 10       	cpse	r8, r1
 d26:	f5 cf       	rjmp	.-22     	; 0xd12 <vfprintf+0x384>
 d28:	22 20       	and	r2, r2
 d2a:	09 f4       	brne	.+2      	; 0xd2e <vfprintf+0x3a0>
 d2c:	42 ce       	rjmp	.-892    	; 0x9b2 <vfprintf+0x24>
 d2e:	b6 01       	movw	r22, r12
 d30:	80 e2       	ldi	r24, 0x20	; 32
 d32:	90 e0       	ldi	r25, 0x00	; 0
 d34:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 d38:	2a 94       	dec	r2
 d3a:	f6 cf       	rjmp	.-20     	; 0xd28 <vfprintf+0x39a>
 d3c:	f6 01       	movw	r30, r12
 d3e:	86 81       	ldd	r24, Z+6	; 0x06
 d40:	97 81       	ldd	r25, Z+7	; 0x07
 d42:	02 c0       	rjmp	.+4      	; 0xd48 <vfprintf+0x3ba>
 d44:	8f ef       	ldi	r24, 0xFF	; 255
 d46:	9f ef       	ldi	r25, 0xFF	; 255
 d48:	2b 96       	adiw	r28, 0x0b	; 11
 d4a:	e2 e1       	ldi	r30, 0x12	; 18
 d4c:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__epilogue_restores__>

00000d50 <strnlen_P>:
 d50:	fc 01       	movw	r30, r24
 d52:	05 90       	lpm	r0, Z+
 d54:	61 50       	subi	r22, 0x01	; 1
 d56:	70 40       	sbci	r23, 0x00	; 0
 d58:	01 10       	cpse	r0, r1
 d5a:	d8 f7       	brcc	.-10     	; 0xd52 <strnlen_P+0x2>
 d5c:	80 95       	com	r24
 d5e:	90 95       	com	r25
 d60:	8e 0f       	add	r24, r30
 d62:	9f 1f       	adc	r25, r31
 d64:	08 95       	ret

00000d66 <strnlen>:
 d66:	fc 01       	movw	r30, r24
 d68:	61 50       	subi	r22, 0x01	; 1
 d6a:	70 40       	sbci	r23, 0x00	; 0
 d6c:	01 90       	ld	r0, Z+
 d6e:	01 10       	cpse	r0, r1
 d70:	d8 f7       	brcc	.-10     	; 0xd68 <strnlen+0x2>
 d72:	80 95       	com	r24
 d74:	90 95       	com	r25
 d76:	8e 0f       	add	r24, r30
 d78:	9f 1f       	adc	r25, r31
 d7a:	08 95       	ret

00000d7c <strrev>:
 d7c:	dc 01       	movw	r26, r24
 d7e:	fc 01       	movw	r30, r24
 d80:	67 2f       	mov	r22, r23
 d82:	71 91       	ld	r23, Z+
 d84:	77 23       	and	r23, r23
 d86:	e1 f7       	brne	.-8      	; 0xd80 <strrev+0x4>
 d88:	32 97       	sbiw	r30, 0x02	; 2
 d8a:	04 c0       	rjmp	.+8      	; 0xd94 <strrev+0x18>
 d8c:	7c 91       	ld	r23, X
 d8e:	6d 93       	st	X+, r22
 d90:	70 83       	st	Z, r23
 d92:	62 91       	ld	r22, -Z
 d94:	ae 17       	cp	r26, r30
 d96:	bf 07       	cpc	r27, r31
 d98:	c8 f3       	brcs	.-14     	; 0xd8c <strrev+0x10>
 d9a:	08 95       	ret

00000d9c <fputc>:
 d9c:	0f 93       	push	r16
 d9e:	1f 93       	push	r17
 da0:	cf 93       	push	r28
 da2:	df 93       	push	r29
 da4:	fb 01       	movw	r30, r22
 da6:	23 81       	ldd	r18, Z+3	; 0x03
 da8:	21 fd       	sbrc	r18, 1
 daa:	03 c0       	rjmp	.+6      	; 0xdb2 <fputc+0x16>
 dac:	8f ef       	ldi	r24, 0xFF	; 255
 dae:	9f ef       	ldi	r25, 0xFF	; 255
 db0:	2c c0       	rjmp	.+88     	; 0xe0a <fputc+0x6e>
 db2:	22 ff       	sbrs	r18, 2
 db4:	16 c0       	rjmp	.+44     	; 0xde2 <fputc+0x46>
 db6:	46 81       	ldd	r20, Z+6	; 0x06
 db8:	57 81       	ldd	r21, Z+7	; 0x07
 dba:	24 81       	ldd	r18, Z+4	; 0x04
 dbc:	35 81       	ldd	r19, Z+5	; 0x05
 dbe:	42 17       	cp	r20, r18
 dc0:	53 07       	cpc	r21, r19
 dc2:	44 f4       	brge	.+16     	; 0xdd4 <fputc+0x38>
 dc4:	a0 81       	ld	r26, Z
 dc6:	b1 81       	ldd	r27, Z+1	; 0x01
 dc8:	9d 01       	movw	r18, r26
 dca:	2f 5f       	subi	r18, 0xFF	; 255
 dcc:	3f 4f       	sbci	r19, 0xFF	; 255
 dce:	31 83       	std	Z+1, r19	; 0x01
 dd0:	20 83       	st	Z, r18
 dd2:	8c 93       	st	X, r24
 dd4:	26 81       	ldd	r18, Z+6	; 0x06
 dd6:	37 81       	ldd	r19, Z+7	; 0x07
 dd8:	2f 5f       	subi	r18, 0xFF	; 255
 dda:	3f 4f       	sbci	r19, 0xFF	; 255
 ddc:	37 83       	std	Z+7, r19	; 0x07
 dde:	26 83       	std	Z+6, r18	; 0x06
 de0:	14 c0       	rjmp	.+40     	; 0xe0a <fputc+0x6e>
 de2:	8b 01       	movw	r16, r22
 de4:	ec 01       	movw	r28, r24
 de6:	fb 01       	movw	r30, r22
 de8:	00 84       	ldd	r0, Z+8	; 0x08
 dea:	f1 85       	ldd	r31, Z+9	; 0x09
 dec:	e0 2d       	mov	r30, r0
 dee:	09 95       	icall
 df0:	89 2b       	or	r24, r25
 df2:	e1 f6       	brne	.-72     	; 0xdac <fputc+0x10>
 df4:	d8 01       	movw	r26, r16
 df6:	16 96       	adiw	r26, 0x06	; 6
 df8:	8d 91       	ld	r24, X+
 dfa:	9c 91       	ld	r25, X
 dfc:	17 97       	sbiw	r26, 0x07	; 7
 dfe:	01 96       	adiw	r24, 0x01	; 1
 e00:	17 96       	adiw	r26, 0x07	; 7
 e02:	9c 93       	st	X, r25
 e04:	8e 93       	st	-X, r24
 e06:	16 97       	sbiw	r26, 0x06	; 6
 e08:	ce 01       	movw	r24, r28
 e0a:	df 91       	pop	r29
 e0c:	cf 91       	pop	r28
 e0e:	1f 91       	pop	r17
 e10:	0f 91       	pop	r16
 e12:	08 95       	ret

00000e14 <__ultoa_invert>:
 e14:	fa 01       	movw	r30, r20
 e16:	aa 27       	eor	r26, r26
 e18:	28 30       	cpi	r18, 0x08	; 8
 e1a:	51 f1       	breq	.+84     	; 0xe70 <__ultoa_invert+0x5c>
 e1c:	20 31       	cpi	r18, 0x10	; 16
 e1e:	81 f1       	breq	.+96     	; 0xe80 <__ultoa_invert+0x6c>
 e20:	e8 94       	clt
 e22:	6f 93       	push	r22
 e24:	6e 7f       	andi	r22, 0xFE	; 254
 e26:	6e 5f       	subi	r22, 0xFE	; 254
 e28:	7f 4f       	sbci	r23, 0xFF	; 255
 e2a:	8f 4f       	sbci	r24, 0xFF	; 255
 e2c:	9f 4f       	sbci	r25, 0xFF	; 255
 e2e:	af 4f       	sbci	r26, 0xFF	; 255
 e30:	b1 e0       	ldi	r27, 0x01	; 1
 e32:	3e d0       	rcall	.+124    	; 0xeb0 <__ultoa_invert+0x9c>
 e34:	b4 e0       	ldi	r27, 0x04	; 4
 e36:	3c d0       	rcall	.+120    	; 0xeb0 <__ultoa_invert+0x9c>
 e38:	67 0f       	add	r22, r23
 e3a:	78 1f       	adc	r23, r24
 e3c:	89 1f       	adc	r24, r25
 e3e:	9a 1f       	adc	r25, r26
 e40:	a1 1d       	adc	r26, r1
 e42:	68 0f       	add	r22, r24
 e44:	79 1f       	adc	r23, r25
 e46:	8a 1f       	adc	r24, r26
 e48:	91 1d       	adc	r25, r1
 e4a:	a1 1d       	adc	r26, r1
 e4c:	6a 0f       	add	r22, r26
 e4e:	71 1d       	adc	r23, r1
 e50:	81 1d       	adc	r24, r1
 e52:	91 1d       	adc	r25, r1
 e54:	a1 1d       	adc	r26, r1
 e56:	20 d0       	rcall	.+64     	; 0xe98 <__ultoa_invert+0x84>
 e58:	09 f4       	brne	.+2      	; 0xe5c <__ultoa_invert+0x48>
 e5a:	68 94       	set
 e5c:	3f 91       	pop	r19
 e5e:	2a e0       	ldi	r18, 0x0A	; 10
 e60:	26 9f       	mul	r18, r22
 e62:	11 24       	eor	r1, r1
 e64:	30 19       	sub	r19, r0
 e66:	30 5d       	subi	r19, 0xD0	; 208
 e68:	31 93       	st	Z+, r19
 e6a:	de f6       	brtc	.-74     	; 0xe22 <__ultoa_invert+0xe>
 e6c:	cf 01       	movw	r24, r30
 e6e:	08 95       	ret
 e70:	46 2f       	mov	r20, r22
 e72:	47 70       	andi	r20, 0x07	; 7
 e74:	40 5d       	subi	r20, 0xD0	; 208
 e76:	41 93       	st	Z+, r20
 e78:	b3 e0       	ldi	r27, 0x03	; 3
 e7a:	0f d0       	rcall	.+30     	; 0xe9a <__ultoa_invert+0x86>
 e7c:	c9 f7       	brne	.-14     	; 0xe70 <__ultoa_invert+0x5c>
 e7e:	f6 cf       	rjmp	.-20     	; 0xe6c <__ultoa_invert+0x58>
 e80:	46 2f       	mov	r20, r22
 e82:	4f 70       	andi	r20, 0x0F	; 15
 e84:	40 5d       	subi	r20, 0xD0	; 208
 e86:	4a 33       	cpi	r20, 0x3A	; 58
 e88:	18 f0       	brcs	.+6      	; 0xe90 <__ultoa_invert+0x7c>
 e8a:	49 5d       	subi	r20, 0xD9	; 217
 e8c:	31 fd       	sbrc	r19, 1
 e8e:	40 52       	subi	r20, 0x20	; 32
 e90:	41 93       	st	Z+, r20
 e92:	02 d0       	rcall	.+4      	; 0xe98 <__ultoa_invert+0x84>
 e94:	a9 f7       	brne	.-22     	; 0xe80 <__ultoa_invert+0x6c>
 e96:	ea cf       	rjmp	.-44     	; 0xe6c <__ultoa_invert+0x58>
 e98:	b4 e0       	ldi	r27, 0x04	; 4
 e9a:	a6 95       	lsr	r26
 e9c:	97 95       	ror	r25
 e9e:	87 95       	ror	r24
 ea0:	77 95       	ror	r23
 ea2:	67 95       	ror	r22
 ea4:	ba 95       	dec	r27
 ea6:	c9 f7       	brne	.-14     	; 0xe9a <__ultoa_invert+0x86>
 ea8:	00 97       	sbiw	r24, 0x00	; 0
 eaa:	61 05       	cpc	r22, r1
 eac:	71 05       	cpc	r23, r1
 eae:	08 95       	ret
 eb0:	9b 01       	movw	r18, r22
 eb2:	ac 01       	movw	r20, r24
 eb4:	0a 2e       	mov	r0, r26
 eb6:	06 94       	lsr	r0
 eb8:	57 95       	ror	r21
 eba:	47 95       	ror	r20
 ebc:	37 95       	ror	r19
 ebe:	27 95       	ror	r18
 ec0:	ba 95       	dec	r27
 ec2:	c9 f7       	brne	.-14     	; 0xeb6 <__ultoa_invert+0xa2>
 ec4:	62 0f       	add	r22, r18
 ec6:	73 1f       	adc	r23, r19
 ec8:	84 1f       	adc	r24, r20
 eca:	95 1f       	adc	r25, r21
 ecc:	a0 1d       	adc	r26, r0
 ece:	08 95       	ret

00000ed0 <__prologue_saves__>:
 ed0:	2f 92       	push	r2
 ed2:	3f 92       	push	r3
 ed4:	4f 92       	push	r4
 ed6:	5f 92       	push	r5
 ed8:	6f 92       	push	r6
 eda:	7f 92       	push	r7
 edc:	8f 92       	push	r8
 ede:	9f 92       	push	r9
 ee0:	af 92       	push	r10
 ee2:	bf 92       	push	r11
 ee4:	cf 92       	push	r12
 ee6:	df 92       	push	r13
 ee8:	ef 92       	push	r14
 eea:	ff 92       	push	r15
 eec:	0f 93       	push	r16
 eee:	1f 93       	push	r17
 ef0:	cf 93       	push	r28
 ef2:	df 93       	push	r29
 ef4:	cd b7       	in	r28, 0x3d	; 61
 ef6:	de b7       	in	r29, 0x3e	; 62
 ef8:	ca 1b       	sub	r28, r26
 efa:	db 0b       	sbc	r29, r27
 efc:	0f b6       	in	r0, 0x3f	; 63
 efe:	f8 94       	cli
 f00:	de bf       	out	0x3e, r29	; 62
 f02:	0f be       	out	0x3f, r0	; 63
 f04:	cd bf       	out	0x3d, r28	; 61
 f06:	09 94       	ijmp

00000f08 <__epilogue_restores__>:
 f08:	2a 88       	ldd	r2, Y+18	; 0x12
 f0a:	39 88       	ldd	r3, Y+17	; 0x11
 f0c:	48 88       	ldd	r4, Y+16	; 0x10
 f0e:	5f 84       	ldd	r5, Y+15	; 0x0f
 f10:	6e 84       	ldd	r6, Y+14	; 0x0e
 f12:	7d 84       	ldd	r7, Y+13	; 0x0d
 f14:	8c 84       	ldd	r8, Y+12	; 0x0c
 f16:	9b 84       	ldd	r9, Y+11	; 0x0b
 f18:	aa 84       	ldd	r10, Y+10	; 0x0a
 f1a:	b9 84       	ldd	r11, Y+9	; 0x09
 f1c:	c8 84       	ldd	r12, Y+8	; 0x08
 f1e:	df 80       	ldd	r13, Y+7	; 0x07
 f20:	ee 80       	ldd	r14, Y+6	; 0x06
 f22:	fd 80       	ldd	r15, Y+5	; 0x05
 f24:	0c 81       	ldd	r16, Y+4	; 0x04
 f26:	1b 81       	ldd	r17, Y+3	; 0x03
 f28:	aa 81       	ldd	r26, Y+2	; 0x02
 f2a:	b9 81       	ldd	r27, Y+1	; 0x01
 f2c:	ce 0f       	add	r28, r30
 f2e:	d1 1d       	adc	r29, r1
 f30:	0f b6       	in	r0, 0x3f	; 63
 f32:	f8 94       	cli
 f34:	de bf       	out	0x3e, r29	; 62
 f36:	0f be       	out	0x3f, r0	; 63
 f38:	cd bf       	out	0x3d, r28	; 61
 f3a:	ed 01       	movw	r28, r26
 f3c:	08 95       	ret

00000f3e <_exit>:
 f3e:	f8 94       	cli

00000f40 <__stop_program>:
 f40:	ff cf       	rjmp	.-2      	; 0xf40 <__stop_program>
